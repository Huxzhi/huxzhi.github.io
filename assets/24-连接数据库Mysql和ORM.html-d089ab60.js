import{_ as c,X as l,Y as i,Z as n,$ as s,a1 as a,a3 as r,a2 as e,G as t}from"./framework-c2b0d87a.js";const u="/assets/image-2023-02-03_19-48-46-581-24-连接数据库Mysql-0cf8d610.png",d="/assets/image-2023-02-03_19-52-41-475-24-连接数据库Mysql-b879c05f.png",k={},m=n("p",null,"Nestjs 集成数据库，由于企业用的 Mysql 居多 我们就用 Nestjs 连接 Mysql",-1),v=n("h2",{id:"_1-安装-mysql-mysql-server",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-安装-mysql-mysql-server","aria-hidden":"true"},"#"),s(" 1.安装 mysql (mysql-server)")],-1),b={href:"https://cubox.pro/share/fVv43q",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get install mysql-server # 中途需要选择一下y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>个人配置 Mysql 8.0</p><h2 id="_2-orm-框架-typeorm" tabindex="-1"><a class="header-anchor" href="#_2-orm-框架-typeorm" aria-hidden="true">#</a> 2.ORM 框架（typeOrm）</h2><p>typeOrm 是 TypeScript 中最成熟的对象关系映射器( ORM )。因为它是用 TypeScript 编写的，所以可以很好地与 Nest 框架集成</p><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install --save @nestjs/typeorm typeorm mysql2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="可视化工具" tabindex="-1"><a class="header-anchor" href="#可视化工具" aria-hidden="true">#</a> 可视化工具</h3><p>如果使用的是 vsCode 安装数据库可视化工具 <img src="`+u+'" alt="" loading="lazy"></p><h3 id="在-app-module-ts-注册" tabindex="-1"><a class="header-anchor" href="#在-app-module-ts-注册" aria-hidden="true">#</a> 在 app.module.ts 注册</h3>',9),h=n("code",null,".env.development",-1),_=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token comment">//数据库类型</span>
      username<span class="token operator">:</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token comment">//账号</span>
      password<span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span> <span class="token comment">//密码</span>
      host<span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token comment">//host</span>
      port<span class="token operator">:</span> <span class="token number">3306</span><span class="token punctuation">,</span> <span class="token comment">//</span>
      database<span class="token operator">:</span> <span class="token string">&quot;portal&quot;</span><span class="token punctuation">,</span> <span class="token comment">//库名</span>
      entities<span class="token operator">:</span> <span class="token punctuation">[</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/**/*.entity{.ts,.js}&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//实体文件</span>
      synchronize<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//synchronize字段代表是否自动将实体类同步到数据库</span>
      retryDelay<span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token comment">//重试连接数据库间隔</span>
      retryAttempts<span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token comment">//重试连接数据库的次数</span>
      autoLoadEntities<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//如果为true,将自动加载实体 forFeature()方法注册的每个实体都将自动添加到配置对象的实体数组中</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义实体" tabindex="-1"><a class="header-anchor" href="#定义实体" aria-hidden="true">#</a> 定义实体</h3><p>src/test/entities/test.entity.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Entity<span class="token punctuation">,</span> Column<span class="token punctuation">,</span> PrimaryGeneratedColumn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entity</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">PrimaryGeneratedColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关联实体" tabindex="-1"><a class="header-anchor" href="#关联实体" aria-hidden="true">#</a> 关联实体</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TestService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TestController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.controller&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Test <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./entities/test.entity&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Test<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>TestController<span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>TestService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TestModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7);function g(f,x){const p=t("ExternalLinkIcon"),o=t("RouterLink");return l(),i("div",null,[m,v,n("p",null,[s("Ubuntu 20.04 安装 mysql 8 并开启远程登录 - 掘金 "),n("a",b,[s("https://cubox.pro/share/fVv43q"),a(p)])]),y,n("p",null,[a(o,{to:"/code/nest-js/24.a-%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF.html"},{default:r(()=>[s("24.a-配置信息")]),_:1}),s(" 将数据库配置信息保存在 "),h]),_])}const w=c(k,[["render",g],["__file","24-连接数据库Mysql和ORM.html.vue"]]);export{w as default};
