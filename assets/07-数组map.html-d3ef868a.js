const n=JSON.parse('{"key":"v-443558a8","path":"/code/react/React18/07-%E6%95%B0%E7%BB%84map.html","title":"07-数组map","lang":"zh-CN","frontmatter":{"category":["react18"],"date":"2023-02-15 21:57","title":"07-数组map","updated":"2023-03-20 16:36","description":"数组的方法 map() 可以根据已有数组返回一个新的数组。 map 需要一个函数作为参数，并且会对数组中的每一个元素调用该函数，并将函数每次执行时所返回的结果作为新数组中的元素。 需要一个回调函数作为参数，回调函数的返回值会成为新数组中的元素 回调函数中有三个参数： 第一个参数：当前元素 第二个参数：当前元素的索引 第三个参数：当前数组 // Arrow function map((element) =&gt; { /* ... */ }) map((element, index) =&gt; { /* ... */ }) map((element, index, array) =&gt; { /* ... */ }) ​ const array1 = [1, 4, 9, 16]; // pass a function to map const map1 = array1.map(x =&gt; x * 2); console.log(map1); // expected output: Array [2, 8, 18, 32]","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/07-%E6%95%B0%E7%BB%84map.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"07-数组map"}],["meta",{"property":"og:description","content":"数组的方法 map() 可以根据已有数组返回一个新的数组。 map 需要一个函数作为参数，并且会对数组中的每一个元素调用该函数，并将函数每次执行时所返回的结果作为新数组中的元素。 需要一个回调函数作为参数，回调函数的返回值会成为新数组中的元素 回调函数中有三个参数： 第一个参数：当前元素 第二个参数：当前元素的索引 第三个参数：当前数组 // Arrow function map((element) =&gt; { /* ... */ }) map((element, index) =&gt; { /* ... */ }) map((element, index, array) =&gt; { /* ... */ }) ​ const array1 = [1, 4, 9, 16]; // pass a function to map const map1 = array1.map(x =&gt; x * 2); console.log(map1); // expected output: Array [2, 8, 18, 32]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T16:11:07.000Z"}],["meta",{"property":"article:published_time","content":"2023-02-15T21:57:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T16:11:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07-数组map\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-15T21:57:00.000Z\\",\\"dateModified\\":\\"2023-03-22T16:11:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数组的方法","slug":"数组的方法","link":"#数组的方法","children":[{"level":3,"title":"map()","slug":"map","link":"#map","children":[]},{"level":3,"title":"filter()","slug":"filter","link":"#filter","children":[]},{"level":3,"title":"find()","slug":"find","link":"#find","children":[]},{"level":3,"title":"reduce()","slug":"reduce","link":"#reduce","children":[]}]}],"git":{"createdTime":1679501467000,"updatedTime":1679501467000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"code/react/React18/07-数组map.md","localizedDate":"2023年2月15日","excerpt":"<h2> 数组的方法</h2>\\n<h3> map()</h3>\\n<p>可以根据已有数组返回一个新的数组。\\nmap 需要一个函数作为参数，并且会对数组中的每一个元素调用该函数，并将函数每次执行时所返回的结果作为新数组中的元素。</p>\\n<ul>\\n<li>需要一个回调函数作为参数，回调函数的返回值会成为新数组中的元素</li>\\n<li>回调函数中有三个参数：\\n<ul>\\n<li>第一个参数：当前元素</li>\\n<li>第二个参数：当前元素的索引</li>\\n<li>第三个参数：当前数组</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// Arrow function</span>\\n<span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">/* ... */</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element<span class=\\"token punctuation\\">,</span> index</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">/* ... */</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element<span class=\\"token punctuation\\">,</span> index<span class=\\"token punctuation\\">,</span> array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">/* ... */</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n​\\n<span class=\\"token keyword\\">const</span> array1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">16</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// pass a function to map</span>\\n<span class=\\"token keyword\\">const</span> map1 <span class=\\"token operator\\">=</span> array1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">x</span> <span class=\\"token operator\\">=&gt;</span> x <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>map1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// expected output: Array [2, 8, 18, 32]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
