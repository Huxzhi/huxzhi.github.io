import{_ as n,X as s,Y as a,a2 as t}from"./framework-c2b0d87a.js";const p="/assets/image-2023-03-22_10-48-11-773-03a-Route组件-ae5a8024.png",e={},o=t('<h2 id="route-组件" tabindex="-1"><a class="header-anchor" href="#route-组件" aria-hidden="true">#</a> Route 组件</h2><p>Route 作用和版本 5 的一样，只是变得更简单了，没有了那么多复杂的属性，并且 <mark>Route 组件必须放到 Routes 中</mark> ，当浏览器的地址发生变化时，会自动对 Routes 中的所有 Route 进行匹配，匹配到的则显示，其余 Route 则不再继续匹配。可以将 Route 当成是一个类似于 if 语句的东西，路径（path）匹配则其中的组件便会被渲染。</p><ol><li>path —— 要匹配的路径</li><li>element —— 路径匹配后挂载的组件，直接传 JSX</li><li>index —— 布尔值，路由是否作为默认组件显示</li></ol><h2 id="部分钩子函数" tabindex="-1"><a class="header-anchor" href="#部分钩子函数" aria-hidden="true">#</a> 部分钩子函数</h2><ol><li>useLocation —— 获取地址信息的钩子</li><li>useNavigate —— 获取 Navigate 对象的钩子 <ol><li>获取一个用于条件页面的函数</li><li>使用 <code>nav(&#39;/about&#39;, {replace: true});</code> 使用 replace 不会产生新的记录</li></ol></li><li>useParams —— 获取请求参数</li><li>useMatch —— 检查路径是否匹配某个路由，匹配则返回一个对象，<code>{params, pathname, patten, ...}</code>，不匹配返回 <code>null</code><ol><li><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ol></li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useLocation<span class="token punctuation">,</span> useParams<span class="token punctuation">,</span> useMatch<span class="token punctuation">,</span> useNavigate<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-router-dom&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">STU_DATA</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;刘备&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Student</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以使用useParams()来获取参数</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取当前的地址信息</span>

    <span class="token comment">// 如果路径匹配，则返回一个对象，不匹配则返回null</span>
    <span class="token comment">//const match = useMatch(&quot;/student/:id&quot;);// 用来检查当前url是否匹配某个路由</span>

    <span class="token comment">// useNavigate获取一个用于条件页面的函数</span>
    <span class="token keyword">const</span> nav <span class="token operator">=</span> <span class="token function">useNavigate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">const</span> stu <span class="token operator">=</span> <span class="token constant">STU_DATA</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">clickHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// nav(&#39;/about&#39;); // 使用push，会产生历史记录</span>
        <span class="token function">nav</span><span class="token punctuation">(</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用replace 不会产生新的记录</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>clickHandler<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">点我一下</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>stu<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token plain-text"> --- </span><span class="token punctuation">{</span>stu<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Student<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[o];function l(i,u){return s(),a("div",null,c)}const k=n(e,[["render",l],["__file","03a-Route组件.html.vue"]]);export{k as default};
