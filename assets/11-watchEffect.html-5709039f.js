const e=JSON.parse(`{"key":"v-93a5cd14","path":"/code/vue/vue3/11-watchEffect.html","title":"11-watchEffect","lang":"zh-CN","frontmatter":{"category":["vue3"],"date":"2023-01-02 19:16","title":"11-watchEffect","updated":"2023-05-13 22:56","description":"watchEffect 立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。 如果用到 message 就只会监听 message 就是用到几个监听几个 而且是非惰性 会默认调用一次 let message = ref&lt;string&gt;('') let message2 = ref&lt;string&gt;('') watchEffect(() =&gt; { //console.log('message', message.value); console.log('message2', message2.value); })","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/vue/vue3/11-watchEffect.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"11-watchEffect"}],["meta",{"property":"og:description","content":"watchEffect 立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。 如果用到 message 就只会监听 message 就是用到几个监听几个 而且是非惰性 会默认调用一次 let message = ref&lt;string&gt;('') let message2 = ref&lt;string&gt;('') watchEffect(() =&gt; { //console.log('message', message.value); console.log('message2', message2.value); })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-24T09:20:32.000Z"}],["meta",{"property":"article:published_time","content":"2023-01-02T19:16:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-24T09:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11-watchEffect\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-02T19:16:00.000Z\\",\\"dateModified\\":\\"2023-06-24T09:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"清除副作用","slug":"清除副作用","link":"#清除副作用","children":[]},{"level":2,"title":"停止跟踪 watchEffect","slug":"停止跟踪-watcheffect","link":"#停止跟踪-watcheffect","children":[]},{"level":2,"title":"更多的配置项","slug":"更多的配置项","link":"#更多的配置项","children":[{"level":3,"title":"副作用刷新时机 flush 一般使用 post","slug":"副作用刷新时机-flush-一般使用-post","link":"#副作用刷新时机-flush-一般使用-post","children":[]}]}],"git":{"createdTime":1677862957000,"updatedTime":1687598432000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":5}]},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"code/vue/vue3/11-watchEffect.md","localizedDate":"2023年1月2日","excerpt":"<h1> watchEffect</h1>\\n<p>立即执行传入的一个函数，同时<a href=\\"https://so.csdn.net/so/search?q=%E5%93%8D%E5%BA%94%E5%BC%8F&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">响应式</a>追踪其依赖，并在其依赖变更时重新运行该函数。</p>\\n<p>如果用到 message 就只会监听 message 就是用到几个监听几个 而且是非惰性 会默认调用一次</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">let</span> message <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">ref</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">let</span> message2 <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">ref</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token function\\">watchEffect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//console.log('message', message.value);</span>\\n    <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'message2'</span><span class=\\"token punctuation\\">,</span> message2<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}`);export{e as data};
