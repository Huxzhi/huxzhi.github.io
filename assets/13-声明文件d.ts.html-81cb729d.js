import{_ as e,X as s,Y as a,a2 as n}from"./framework-c2b0d87a.js";const c={},d=n(`<h2 id="声明文件-declare" tabindex="-1"><a class="header-anchor" href="#声明文件-declare" aria-hidden="true">#</a> 声明文件 declare</h2><p>当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">var</span> 声明全局变量
<span class="token keyword">declare</span> <span class="token keyword">function</span> 声明全局方法
<span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">声明全局类</span>
<span class="token keyword">declare</span> <span class="token keyword">enum</span> 声明全局枚举类型
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> 声明（含有子属性的）全局对象
<span class="token keyword">interface</span> <span class="token class-name">和</span> <span class="token keyword">type</span> <span class="token class-name">声明全局类型</span>
<span class="token comment">/// &lt;reference /&gt; 三斜线指令</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过语法 <code>declare</code> 暴露我们声明的 <code>axios</code> 对象</p><p><code>declare const axios: AxiosStatic;</code></p><p>如果有一些第三方包确实没有声明文件我们可以自己去定义</p><p><code>名称.d.ts</code> 创建一个文件去声明</p><p>例如 <code>express.d.ts</code></p><p><code>declare const express: ()=&gt; any;</code></p><p>关于这些第三发的声明文件包都收录到了 npm</p>`,10),o=[d];function l(p,r){return s(),a("div",null,o)}const i=e(c,[["render",l],["__file","13-声明文件d.ts.html.vue"]]);export{i as default};
