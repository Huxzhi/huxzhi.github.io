import{_ as o,X as p,Y as e,Z as s,$ as n,a1 as c,a2 as a,G as l}from"./framework-c2b0d87a.js";const u={},i=a(`<h1 id="_8-原型链" tabindex="-1"><a class="header-anchor" href="#_8-原型链" aria-hidden="true">#</a> 8-原型链</h1><ul><li><code>prototype</code> 这个属性只有函数对象才有！，（构造）函数的原型对象</li><li><code>__proto__</code> <strong>所有对象都有此属性</strong>，总是指向对应的（构造）函数的原型对象 prototype</li><li><code>constructor</code>: <code>__proto__</code> 下面的 <code>constructor</code> 指向构造函数自己</li></ul><h2 id="继承属性的方案" tabindex="-1"><a class="header-anchor" href="#继承属性的方案" aria-hidden="true">#</a> 继承属性的方案</h2><p>对象访问属性的时候,在自身属性查找,找不到再去 <code>__proto__</code> 原型链上查找,直到找不到为止返回 undefined。</p><div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>function Vue() {
  this.name = &quot;小红&quot;;
}

Vue.prototype.age = 10;
Object.prototype.hobby = &quot;画画&quot;;
const app = new Vue();
const app2 = new Vue();
console.log(&quot;app.name&quot;, app);
console.log(&quot;app.age&quot;, app.age); //app.__proto__
console.log(&quot;app2.age&quot;, app2.age);
console.log(&quot;app2.hobby&quot;, app2.hobby); //app.__proto__.__proto__
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原型链的终点-object-prototype" tabindex="-1"><a class="header-anchor" href="#原型链的终点-object-prototype" aria-hidden="true">#</a> 原型链的终点 <code>Object.prototype</code></h2><p><mark>一切皆对象。原型链的终点 <code>Object.prototype</code>，通过<code>__proto__</code>找父对象的 <code>prototype</code></mark></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;obj&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;obj._proto_&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;构造函数的原型对象&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype <span class="token operator">===</span> obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;obj._proto_._proto_&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;终点&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;小红&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;app-2-proto&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Object: null prototype] {}</span>
<span class="token comment">//找原型的原型</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;app-2-proto&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="constructor-主要判断对象的原型是否是某个对象" tabindex="-1"><a class="header-anchor" href="#constructor-主要判断对象的原型是否是某个对象" aria-hidden="true">#</a> constructor 主要判断对象的原型是否是某个对象</h2>`,9),r=s("strong",null,[s("code",null,"constructor")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;constructor---&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: Object]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;app-1&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;app-1&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function _(v,m){const t=l("ExternalLinkIcon");return p(),e("div",null,[i,s("p",null,[n("The "),r,n(" method is a special method of a "),s("a",d,[n("class"),c(t)]),n(" for creating and initializing an object instance of that class.")]),k])}const g=o(u,[["render",_],["__file","8-原型链prototype.html.vue"]]);export{g as default};
