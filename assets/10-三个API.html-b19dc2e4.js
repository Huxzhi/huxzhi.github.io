import{_ as n,X as a,Y as s,a2 as e}from"./framework-c2b0d87a.js";const t={},c=e(`<h2 id="三个-api" tabindex="-1"><a class="header-anchor" href="#三个-api" aria-hidden="true">#</a> 三个 API</h2><h3 id="react-createelement" tabindex="-1"><a class="header-anchor" href="#react-createelement" aria-hidden="true">#</a> React.createElement()</h3><ul><li><code>React.createElement(type, [props], [...children])</code></li><li>用来创建 React 元素 <ul><li>参数：（3 个）</li></ul><ol><li>元素的名称（html 标签必须小写）</li><li>标签中的属性 <ul><li>class 属性需要使用 className 来设置</li><li>在设置事件时，属性名需要修改为驼峰命名法,如 <code>onClick</code> ，同时不要写成调用的形式，改写为 箭头函数 的形式，见下方 三部曲</li></ul></li><li>元素的内容（子元素）</li></ol></li><li>React 元素最终会通过虚拟 DOM 转换为真实的 DOM 元素 <ul><li>React 元素一旦创建就无法修改，只能通过新创建的元素进行替换</li></ul></li></ul><h3 id="reactdom-createroot" tabindex="-1"><a class="header-anchor" href="#reactdom-createroot" aria-hidden="true">#</a> ReactDOM.createRoot()</h3><ul><li><code>createRoot(container[, options])</code></li><li>用来创建 React 的根容器，容器用来放置 React 元素。</li></ul><h3 id="root-render" tabindex="-1"><a class="header-anchor" href="#root-render" aria-hidden="true">#</a> root.render()</h3><ul><li><code>root.render(element)</code> 重新渲染</li><li>当首次调用时，容器节点里的所有 DOM 元素都会被替换，后续的调用则会使用 React 的 DOM 差分算法（DOM diffing algorithm）进行高效的更新。 一般不写内容，但可以写 该网页不支持react ，如果支持，就会被替换掉</li><li>不会修改容器节点（只会修改容器的子节点）。可以在不覆盖现有子节点的情况下，将组件插入已有的 DOM 节点中。</li></ul><h2 id="简单三部曲" tabindex="-1"><a class="header-anchor" href="#简单三部曲" aria-hidden="true">#</a> 简单三部曲</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个React元素</span>
<span class="token keyword">const</span> button <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;你点我干嘛&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;点我一下&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取根元素</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 将元素在根元素中显示</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[c];function l(i,p){return a(),s("div",null,o)}const u=n(t,[["render",l],["__file","10-三个API.html.vue"]]);export{u as default};
