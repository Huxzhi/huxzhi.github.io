const t=JSON.parse('{"key":"v-5c924949","path":"/code/react/React-Router/03a-Route%E7%BB%84%E4%BB%B6.html","title":"03a-Route组件","lang":"zh-CN","frontmatter":{"category":["react18","react-router-v6"],"date":"2023-03-22 10:33","title":"03a-Route组件","updated":"2023-05-08 09:12","description":"Route 组件 Route 作用和版本 5 的一样，只是变得更简单了，没有了那么多复杂的属性，并且 Route 组件必须放到 Routes 中 ，当浏览器的地址发生变化时，会自动对 Routes 中的所有 Route 进行匹配，匹配到的则显示，其余 Route 则不再继续匹配。可以将 Route 当成是一个类似于 if 语句的东西，路径（path）匹配则其中的组件便会被渲染。 path —— 要匹配的路径 element —— 路径匹配后挂载的组件，直接传 JSX index —— 布尔值，路由是否作为默认组件显示","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React-Router/03a-Route%E7%BB%84%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"03a-Route组件"}],["meta",{"property":"og:description","content":"Route 组件 Route 作用和版本 5 的一样，只是变得更简单了，没有了那么多复杂的属性，并且 Route 组件必须放到 Routes 中 ，当浏览器的地址发生变化时，会自动对 Routes 中的所有 Route 进行匹配，匹配到的则显示，其余 Route 则不再继续匹配。可以将 Route 当成是一个类似于 if 语句的东西，路径（path）匹配则其中的组件便会被渲染。 path —— 要匹配的路径 element —— 路径匹配后挂载的组件，直接传 JSX index —— 布尔值，路由是否作为默认组件显示"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://huxzhi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T02:14:57.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"03a-Route组件"}],["meta",{"property":"article:published_time","content":"2023-03-22T10:33:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-08T02:14:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03a-Route组件\\",\\"image\\":[\\"https://huxzhi.github.io/\\"],\\"datePublished\\":\\"2023-03-22T10:33:00.000Z\\",\\"dateModified\\":\\"2023-05-08T02:14:57.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Route 组件","slug":"route-组件","link":"#route-组件","children":[]},{"level":2,"title":"部分钩子函数","slug":"部分钩子函数","link":"#部分钩子函数","children":[]}],"git":{"createdTime":1679501467000,"updatedTime":1683512097000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":3}]},"readingTime":{"minutes":1.53,"words":460},"filePathRelative":"code/react/React-Router/03a-Route组件.md","localizedDate":"2023年3月22日","excerpt":"<h2> Route 组件</h2>\\n<p>Route 作用和版本 5 的一样，只是变得更简单了，没有了那么多复杂的属性，并且 <mark>Route 组件必须放到 Routes 中</mark> ，当浏览器的地址发生变化时，会自动对 Routes 中的所有 Route 进行匹配，匹配到的则显示，其余 Route 则不再继续匹配。可以将 Route 当成是一个类似于 if 语句的东西，路径（path）匹配则其中的组件便会被渲染。</p>\\n<ol>\\n<li>path —— 要匹配的路径</li>\\n<li>element —— 路径匹配后挂载的组件，直接传 JSX</li>\\n<li>index —— 布尔值，路由是否作为默认组件显示</li>\\n</ol>","copyright":{},"autoDesc":true}');export{t as data};
