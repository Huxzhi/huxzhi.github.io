const t=JSON.parse('{"key":"v-fba73a2e","path":"/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/08-symbol%E7%B1%BB%E5%9E%8B.html","title":"08-symbol类型","lang":"zh-CN","frontmatter":{"date":"2022-12-30 19:03","title":"08-symbol类型","updated":"2023-05-08 09:12","description":"Symbols · TypeScript 中文网 · TypeScript——JavaScript 的超集 ts 官网 Symbol 自 ECMAScript 2015 起，symbol 成为了一种新的原生类型，就像 number 和 string 一样。 symbol 类型的值是通过 Symbol 构造函数创建的。 Symbols&nbsp;是不可改变且唯一的。用来表示独一无二的值，在设计上就不会被遍历出来","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/08-symbol%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"08-symbol类型"}],["meta",{"property":"og:description","content":"Symbols · TypeScript 中文网 · TypeScript——JavaScript 的超集 ts 官网 Symbol 自 ECMAScript 2015 起，symbol 成为了一种新的原生类型，就像 number 和 string 一样。 symbol 类型的值是通过 Symbol 构造函数创建的。 Symbols&nbsp;是不可改变且唯一的。用来表示独一无二的值，在设计上就不会被遍历出来"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T02:14:57.000Z"}],["meta",{"property":"article:published_time","content":"2022-12-30T19:03:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-08T02:14:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08-symbol类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-30T19:03:00.000Z\\",\\"dateModified\\":\\"2023-05-08T02:14:57.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"使用 symbol 定义的属性，是不能通过如下方式遍历拿到的","slug":"使用-symbol-定义的属性-是不能通过如下方式遍历拿到的","link":"#使用-symbol-定义的属性-是不能通过如下方式遍历拿到的","children":[]},{"level":2,"title":"for of 和 for in 的区别","slug":"for-of-和-for-in-的区别","link":"#for-of-和-for-in-的区别","children":[]},{"level":2,"title":"以下为这些 symbols 的列表：","slug":"以下为这些-symbols-的列表","link":"#以下为这些-symbols-的列表","children":[]}],"git":{"createdTime":1677924451000,"updatedTime":1683512097000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":3}]},"readingTime":{"minutes":3.29,"words":987},"filePathRelative":"code/language/typescript/小满TypeScript基础教学/08-symbol类型.md","localizedDate":"2022年12月30日","excerpt":"<p>Symbols  · <a href=\\"https://www.tslang.cn/docs/handbook/symbols.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">TypeScript 中文网 · TypeScript——JavaScript 的超集 ts 官网</a></p>\\n<h1> Symbol</h1>\\n<p>自 ECMAScript 2015 起，symbol 成为了一种新的原生类型，就像 number 和 string 一样。</p>\\n<p>symbol 类型的值是通过 Symbol 构造函数创建的。</p>\\n<p><mark>Symbols&nbsp;是不可改变且唯一的。用来表示独一无二的值，在设计上就不会被遍历出来</mark></p>","copyright":{},"autoDesc":true}');export{t as data};
