const n=JSON.parse(`{"key":"v-633e502e","path":"/code/react/React18/24-%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA.html","title":"24-数据展示","lang":"zh-CN","frontmatter":{"date":"2023-03-09 23:27","title":"24-数据展示","updated":"2023-03-20 16:36","description":"24-数据展示 state 的提升 当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中，这样就可以使得多个组件都能方便的访问到这个数据 logsDate 用来存储学习的日志， 这个数据除了当前组件 Logs 需要使用外，LogsForm 也需要使用 子组件向父组件传递数据 父组件传递一个 props 的 回调函数，子组件调用 父组件的 props 的回调函数 父组件 // 定义一个函数 const saveLogHandler = (newLog) =&gt; { // 向新的日志中添加id，这里不合适，应该是数据库生成的 newLog.id = Date.now() + ''; // console.log('App.js --&gt;',newLog); // 将新的数据添加到数组中， // 不会触发重新渲染，需要 state // logsData.push(newLog); // key 的作用，只会渲染新的元素 setLogsData([newLog, ...logsData]); }; return &lt;div className=\\"app\\"&gt; {/*引入LogsFrom*/} &lt;LogsForm onSaveLog={saveLogHandler}/&gt; &lt;Logs logsData={logsData}/&gt; &lt;/div&gt;;","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/24-%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"24-数据展示"}],["meta",{"property":"og:description","content":"24-数据展示 state 的提升 当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中，这样就可以使得多个组件都能方便的访问到这个数据 logsDate 用来存储学习的日志， 这个数据除了当前组件 Logs 需要使用外，LogsForm 也需要使用 子组件向父组件传递数据 父组件传递一个 props 的 回调函数，子组件调用 父组件的 props 的回调函数 父组件 // 定义一个函数 const saveLogHandler = (newLog) =&gt; { // 向新的日志中添加id，这里不合适，应该是数据库生成的 newLog.id = Date.now() + ''; // console.log('App.js --&gt;',newLog); // 将新的数据添加到数组中， // 不会触发重新渲染，需要 state // logsData.push(newLog); // key 的作用，只会渲染新的元素 setLogsData([newLog, ...logsData]); }; return &lt;div className=\\"app\\"&gt; {/*引入LogsFrom*/} &lt;LogsForm onSaveLog={saveLogHandler}/&gt; &lt;Logs logsData={logsData}/&gt; &lt;/div&gt;;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://huxzhi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T16:11:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"24-数据展示"}],["meta",{"property":"article:published_time","content":"2023-03-09T23:27:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T16:11:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"24-数据展示\\",\\"image\\":[\\"https://huxzhi.github.io/\\"],\\"datePublished\\":\\"2023-03-09T23:27:00.000Z\\",\\"dateModified\\":\\"2023-03-22T16:11:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"state 的提升","slug":"state-的提升","link":"#state-的提升","children":[]},{"level":2,"title":"子组件向父组件传递数据","slug":"子组件向父组件传递数据","link":"#子组件向父组件传递数据","children":[{"level":3,"title":"父组件","slug":"父组件","link":"#父组件","children":[]},{"level":3,"title":"子组件","slug":"子组件","link":"#子组件","children":[]}]}],"git":{"createdTime":1679501467000,"updatedTime":1679501467000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.22,"words":367},"filePathRelative":"code/react/React18/24-数据展示.md","localizedDate":"2023年3月9日","excerpt":"<h1> 24-数据展示</h1>\\n<h2> state 的提升</h2>\\n<p>当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中，这样就可以使得多个组件都能方便的访问到这个数据</p>\\n<p>logsDate 用来存储学习的日志，</p>\\n<ul>\\n<li>这个数据除了当前组件 Logs 需要使用外，LogsForm 也需要使用\\n</li>\\n</ul>\\n<h2> 子组件向父组件传递数据</h2>\\n<p>父组件传递一个 props 的 回调函数，子组件调用 父组件的 props 的回调函数</p>\\n<h3> 父组件</h3>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token comment\\">// 定义一个函数</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">saveLogHandler</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">newLog</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 向新的日志中添加id，这里不合适，应该是数据库生成的</span>\\n    newLog<span class=\\"token punctuation\\">.</span>id <span class=\\"token operator\\">=</span> Date<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// console.log('App.js --&gt;',newLog);</span>\\n\\n    <span class=\\"token comment\\">// 将新的数据添加到数组中，</span>\\n    <span class=\\"token comment\\">// 不会触发重新渲染，需要 state</span>\\n    <span class=\\"token comment\\">// logsData.push(newLog);</span>\\n\\n    <span class=\\"token comment\\">// key 的作用，只会渲染新的元素</span>\\n    <span class=\\"token function\\">setLogsData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>newLog<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span>logsData<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">return</span> <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">className</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>app<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n    </span><span class=\\"token punctuation\\">{</span><span class=\\"token comment\\">/*引入LogsFrom*/</span><span class=\\"token punctuation\\">}</span><span class=\\"token plain-text\\">\\n    </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">LogsForm</span></span> <span class=\\"token attr-name\\">onSaveLog</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>saveLogHandler<span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token plain-text\\">\\n    </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Logs</span></span> <span class=\\"token attr-name\\">logsData</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>logsData<span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token plain-text\\">\\n</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}`);export{n as data};
