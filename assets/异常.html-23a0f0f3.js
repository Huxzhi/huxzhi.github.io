import{_ as n,X as s,Y as a,a2 as e}from"./framework-c2b0d87a.js";const t={},c=e(`<h3 id="异常体系" tabindex="-1"><a class="header-anchor" href="#异常体系" aria-hidden="true">#</a> 异常体系</h3><p>java.lang.Throwable是，所有异常跟错误的超类 java.lang.Error 非常严重的错误，不能处理</p><p>java.lang.Exception 通过实现设计，可以避免 RuntimeException:运行期异常</p><h4 id="自定义异常类" tabindex="-1"><a class="header-anchor" href="#自定义异常类" aria-hidden="true">#</a> 自定义异常类</h4><p>自定义异常类： java提供的异常类，不够我们使用，需要自己定义一些异常类 格式： public class XXXExcepiton extends Exception l RuntimeException{ 添加一个空参数的构造方法 添加一个带异常信息的构造方法 } 注意：</p><ol><li>自定义异常类一般都是以Exception结尾，说明该类是一个异常类</li><li>自定义异常类，必须的继承Exception或者RuntimeException继承Exception：那么自定义的异常类就是一个编译期异常，如果方法内部抛出了编译期异常，就必须处理这个异常，要么throws，要么try...catch继承RuntimeException：那么自定义的异常类就是一个运行期异常，无需处理，交给虚拟机处理（中断处理）</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RegisterException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
<span class="token comment">//添加一个空参数的构造方法</span>
<span class="token keyword">public</span> <span class="token class-name">Registerexception</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">super</span>（）<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
添加一个带异常信息的构造方法
查看源码发现，所有的异常类都会有一个带异常信息的构造方法，方法内部会调用父类带异常信息的构造方法，让父类来处理这个异常信息
*/</span>
<span class="token keyword">public</span> <span class="token class-name">RegisterException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">super</span>（message）<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),i=[c];function p(l,o){return s(),a("div",null,i)}const r=n(t,[["render",p],["__file","异常.html.vue"]]);export{r as default};
