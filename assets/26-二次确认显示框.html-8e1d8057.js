const n=JSON.parse('{"key":"v-abd69a76","path":"/code/react/React18/26-%E4%BA%8C%E6%AC%A1%E7%A1%AE%E8%AE%A4%E6%98%BE%E7%A4%BA%E6%A1%86.html","title":"26-二次确认显示框","lang":"zh-CN","frontmatter":{"category":["react18"],"date":"2023-03-11 16:58","title":"26-二次确认显示框","updated":"2023-03-20 16:36","description":"26-二次确认显示框 显示对话框，还不是模态对话框（Modal Dialogue Box） 由 &lt;Logitem&gt; 子组件 创建 jsx 内可以使用 表达式 是否显示确认窗口 // 添加一个state，记录是否显示确认窗口 const [showConfirm, setShowConfirm] = useState(false); //jsx 内可以使用 表达式 是否显示确认窗口 {showConfirm &amp;&amp; &lt;ConfirmModal confirmText=\\"该操作不可恢复！请确认\\" onCancel={cancelHandler} onOk={okHandler} /&gt;}","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/26-%E4%BA%8C%E6%AC%A1%E7%A1%AE%E8%AE%A4%E6%98%BE%E7%A4%BA%E6%A1%86.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"26-二次确认显示框"}],["meta",{"property":"og:description","content":"26-二次确认显示框 显示对话框，还不是模态对话框（Modal Dialogue Box） 由 &lt;Logitem&gt; 子组件 创建 jsx 内可以使用 表达式 是否显示确认窗口 // 添加一个state，记录是否显示确认窗口 const [showConfirm, setShowConfirm] = useState(false); //jsx 内可以使用 表达式 是否显示确认窗口 {showConfirm &amp;&amp; &lt;ConfirmModal confirmText=\\"该操作不可恢复！请确认\\" onCancel={cancelHandler} onOk={okHandler} /&gt;}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T16:11:07.000Z"}],["meta",{"property":"article:published_time","content":"2023-03-11T16:58:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T16:11:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"26-二次确认显示框\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-11T16:58:00.000Z\\",\\"dateModified\\":\\"2023-03-22T16:11:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"显示对话框，还不是模态对话框（Modal Dialogue Box）","slug":"显示对话框-还不是模态对话框-modal-dialogue-box","link":"#显示对话框-还不是模态对话框-modal-dialogue-box","children":[]},{"level":2,"title":"BackDrop 遮罩，不能点击其他元素","slug":"backdrop-遮罩-不能点击其他元素","link":"#backdrop-遮罩-不能点击其他元素","children":[]},{"level":2,"title":"存在问题","slug":"存在问题","link":"#存在问题","children":[]}],"git":{"createdTime":1679501467000,"updatedTime":1679501467000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":1}]},"readingTime":{"minutes":2.15,"words":645},"filePathRelative":"code/react/React18/26-二次确认显示框.md","localizedDate":"2023年3月11日","excerpt":"<h1> 26-二次确认显示框</h1>\\n<h2> 显示对话框，还不是模态对话框（Modal Dialogue Box）</h2>\\n<p>由 <code>&lt;Logitem&gt;</code> 子组件 创建</p>\\n<p>jsx 内可以使用 表达式 是否显示确认窗口</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token comment\\">// 添加一个state，记录是否显示确认窗口</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>showConfirm<span class=\\"token punctuation\\">,</span> setShowConfirm<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token comment\\">//jsx 内可以使用 表达式 是否显示确认窗口</span>\\n<span class=\\"token punctuation\\">{</span>showConfirm <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ConfirmModal</span></span>\\n    <span class=\\"token attr-name\\">confirmText</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>该操作不可恢复！请确认<span class=\\"token punctuation\\">\\"</span></span>\\n    <span class=\\"token attr-name\\">onCancel</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>cancelHandler<span class=\\"token punctuation\\">}</span></span>\\n    <span class=\\"token attr-name\\">onOk</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>okHandler<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
