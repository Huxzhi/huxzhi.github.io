import{_ as n,X as s,Y as a,a2 as t}from"./framework-c2b0d87a.js";const p="/assets/image-2023-03-10_00-33-11-166-24-数据展示-f3cfac79.png",e={},o=t('<h1 id="_24-数据展示" tabindex="-1"><a class="header-anchor" href="#_24-数据展示" aria-hidden="true">#</a> 24-数据展示</h1><h2 id="state-的提升" tabindex="-1"><a class="header-anchor" href="#state-的提升" aria-hidden="true">#</a> state 的提升</h2><p>当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中，这样就可以使得多个组件都能方便的访问到这个数据</p><p>logsDate 用来存储学习的日志，</p><ul><li>这个数据除了当前组件 Logs 需要使用外，LogsForm 也需要使用 <img src="'+p+`" alt="" loading="lazy"></li></ul><h2 id="子组件向父组件传递数据" tabindex="-1"><a class="header-anchor" href="#子组件向父组件传递数据" aria-hidden="true">#</a> 子组件向父组件传递数据</h2><p>父组件传递一个 props 的 回调函数，子组件调用 父组件的 props 的回调函数</p><h3 id="父组件" tabindex="-1"><a class="header-anchor" href="#父组件" aria-hidden="true">#</a> 父组件</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// 定义一个函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">saveLogHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newLog</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 向新的日志中添加id，这里不合适，应该是数据库生成的</span>
    newLog<span class="token punctuation">.</span>id <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

    <span class="token comment">// console.log(&#39;App.js --&gt;&#39;,newLog);</span>

    <span class="token comment">// 将新的数据添加到数组中，</span>
    <span class="token comment">// 不会触发重新渲染，需要 state</span>
    <span class="token comment">// logsData.push(newLog);</span>

    <span class="token comment">// key 的作用，只会渲染新的元素</span>
    <span class="token function">setLogsData</span><span class="token punctuation">(</span><span class="token punctuation">[</span>newLog<span class="token punctuation">,</span> <span class="token operator">...</span>logsData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span><span class="token comment">/*引入LogsFrom*/</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LogsForm</span></span> <span class="token attr-name">onSaveLog</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>saveLogHandler<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Logs</span></span> <span class="token attr-name">logsData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>logsData<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子组件" tabindex="-1"><a class="header-anchor" href="#子组件" aria-hidden="true">#</a> 子组件</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// 当表单提交时，汇总表单中的数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">formSubmitHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 取消表单的默认行为</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取表单项中的数据日期、内容、时长</span>
    <span class="token comment">// 将数据拼装为一个对象</span>
    <span class="token keyword">const</span> newLog <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>inputDate<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">desc</span><span class="token operator">:</span> inputDesc<span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token operator">+</span>inputTime
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// 当要添加新的日志时，调用父组件传递过来的函数</span>
    props<span class="token punctuation">.</span><span class="token function">onSaveLog</span><span class="token punctuation">(</span>newLog<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 清空表单项</span>
    <span class="token function">setInputDate</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setInputDesc</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setInputTime</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),c=[o];function l(i,u){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","24-数据展示.html.vue"]]);export{d as default};
