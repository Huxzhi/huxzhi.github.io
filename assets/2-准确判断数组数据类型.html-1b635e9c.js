import{_ as n,X as s,Y as a,a2 as t}from"./framework-c2b0d87a.js";const e={},o=t(`<h1 id="_2-准确判断数组数据类型" tabindex="-1"><a class="header-anchor" href="#_2-准确判断数组数据类型" aria-hidden="true">#</a> 2-准确判断数组数据类型</h1><h2 id="typrof" tabindex="-1"><a class="header-anchor" href="#typrof" aria-hidden="true">#</a> typrof</h2><p>typeof 主要用来判断基本数据类型。字符串，数字，布尔 不能区分 对象，数组，<code>null</code> ，这三个返回都是 object 空对象</p><h2 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h2><p><code>instanceof</code> : 要判断的数据 <code>instanceof</code> 构造原型</p><p>在浏览器 window 中 ,<code>instanceof</code> 只有同一个全局 window 才会返回 <code>true</code>。通过 iframe 引入的 window 是 <code>false</code> ，通过<code>window.frames[0]</code> 读取</p><h2 id="object-prototype" tabindex="-1"><a class="header-anchor" href="#object-prototype" aria-hidden="true">#</a> Object.prototype</h2><p>最准确的判断数据类型的方法，强烈推荐 <code>Object.prototype.toString.call(数据)</code></p><p>读取 object 后面一个属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">tostring</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object Number]&#39;</span>
object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">tostring</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;222&quot;</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object String]&#39;</span>
object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">tostring</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object Undefined]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object Bolean]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">tostring</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object Array]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),c=[o];function p(i,l){return s(),a("div",null,c)}const r=n(e,[["render",p],["__file","2-准确判断数组数据类型.html.vue"]]);export{r as default};
