import{_ as a,X as e,Y as t,a0 as p,Z as n,$ as s,a3 as o}from"./framework-7bff9a9e.js";const i="/assets/image-2023-01-11_18-12-50-738-42-环境变量-3d4efcaf.png",c="/assets/image-2023-01-11_18-13-09-733-42-环境变量-7036be75.png",l="/assets/image-2023-01-11_18-13-36-900-42-环境变量-22f45d68.png",u="/assets/image-2023-01-11_18-15-17-711-42-环境变量-9755960b.png",r="/assets/image-2023-01-11_18-15-49-139-42-环境变量-4cf40ef5.png",d="/assets/image-2023-01-11_18-16-58-210-42-环境变量-c0d97dc2.png",k="/assets/image-2023-01-11_18-16-21-247-42-环境变量-2105d075.png",m={},v=n("h1",{id:"环境变量",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#环境变量","aria-hidden":"true"},"#"),s(" 环境变量")],-1),g=n("p",null,"环境变量：他的主要作用就是让开发者区分不同的运行环境，来实现 兼容开发和生产",-1),f=n("p",null,"例如 npm run dev 就是开发环境 npm run build 就是生产环境等等",-1),b=n("p",null,[n("code",null,"Vite"),s(" 在一个特殊的 "),n("code",null,"1mport.meta.env"),s(" 对象上暴露环境变量。这里有一些在所有情况下都可以使用的内建变量")],-1),_=o(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token property">&quot;BASE_URL&quot;</span><span class="token operator">:</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token comment">//部署时的URL前缀</span>
<span class="token property">&quot;MODE&quot;</span><span class="token operator">:</span><span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span> <span class="token comment">//运行模式</span>
<span class="token property">&quot;DEV&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//是否在dev环境</span>
<span class="token property">&quot;PROD&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//是否是build 环境</span>
<span class="token property">&quot;SSR&quot;</span><span class="token operator">:</span><span class="token boolean">false</span> <span class="token comment">//是否是SSR 服务端渲染模式</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的一点就是这个环境变量不能使用动态赋值 <code>1mport.meta.env[key]</code> 应为这些环境变量在打包的时候是会被硬编码的通过 <code>JSON.stringify</code> 注入浏览器的</p><h3 id="配置额外的环境变量" tabindex="-1"><a class="header-anchor" href="#配置额外的环境变量" aria-hidden="true">#</a> 配置额外的环境变量</h3><p>在根目录新建 env 文件 可以创建多个</p><p>如下 <code>env.[name]</code></p><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="修改启动命令" tabindex="-1"><a class="header-anchor" href="#修改启动命令" aria-hidden="true">#</a> 修改启动命令</h3><p>在 package json 配置 <code>--mode env</code> 文件名称</p><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="配置智能提示" tabindex="-1"><a class="header-anchor" href="#配置智能提示" aria-hidden="true">#</a> 配置智能提示</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ImportMetaEnv</span> <span class="token punctuation">{</span>
    <span class="token constant">VITE_XIAOMAN</span><span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后 App.vue 输出 <code>JSON.stringify(i<wbr>mport.meta.env)</code></p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>就已经添加进去了</p><h3 id="生产环境使用" tabindex="-1"><a class="header-anchor" href="#生产环境使用" aria-hidden="true">#</a> 生产环境使用</h3><p>创建  <code>.env.production</code>  在执行 <code>npm run build</code> 的时候他会自己加载这个文件</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="如果想在-vite-config-ts-使用环境变量" tabindex="-1"><a class="header-anchor" href="#如果想在-vite-config-ts-使用环境变量" aria-hidden="true">#</a> 如果想在 vite.config.ts 使用环境变量</h3><figure><img src="'+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fileURLToPath<span class="token punctuation">,</span> <span class="token constant">URL</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:url&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> vueJsx <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue-jsx&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//node 的方法</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>mode<span class="token punctuation">}</span><span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">loadEnv</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">vueJsx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
      alias<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token constant">URL</span></span><span class="token punctuation">(</span><span class="token string">&#39;./src&#39;</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们就可以通过环境变量这个值 做一些事情比如 切换接口 url 等</p>`,23);function h(y,x){return e(),t("div",null,[v,g,f,b,p(" 不能出现i<wbr>mport.meta.env  "),_])}const q=a(m,[["render",h],["__file","42-环境变量.html.vue"]]);export{q as default};
