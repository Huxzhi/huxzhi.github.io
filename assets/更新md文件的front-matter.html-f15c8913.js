import{_ as a,X as t,Y as p,a0 as e,Z as n,$ as s,a2 as o}from"./framework-c2b0d87a.js";const i={},c=n("h1",{id:"更新-md-文件的-front-matter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#更新-md-文件的-front-matter","aria-hidden":"true"},"#"),s(" 更新 md 文件的 front matter")],-1),l=n("ol",null,[n("li",null,"增加创建时间"),n("li",null,"title 为文件名")],-1),u=n("h2",{id:"使用-frontmatter-库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-frontmatter-库","aria-hidden":"true"},"#"),s(" 使用 frontmatter 库")],-1),r=o(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># coding: utf-8</span>

<span class="token keyword">import</span> os
<span class="token keyword">import</span> time

<span class="token keyword">import</span> frontmatter

<span class="token keyword">def</span> <span class="token function">update_front_matter</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
       post <span class="token operator">=</span> frontmatter<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    is_write <span class="token operator">=</span> <span class="token boolean">False</span>
      <span class="token comment"># 获取标题</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> post<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        title<span class="token operator">=</span><span class="token builtin">file</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>
        post<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>title
        <span class="token keyword">if</span> <span class="token keyword">not</span> is_write<span class="token punctuation">:</span>
            is_write <span class="token operator">=</span> <span class="token boolean">True</span>


    <span class="token keyword">if</span> <span class="token keyword">not</span> post<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Window下 os.path(file).getctime()</span>
        <span class="token comment"># macOS</span>
        timeArray <span class="token operator">=</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">.</span>st_birthtime<span class="token punctuation">)</span><span class="token punctuation">)</span>
        post<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M&quot;</span><span class="token punctuation">,</span> timeArray<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> is_write<span class="token punctuation">:</span>
            is_write <span class="token operator">=</span> <span class="token boolean">True</span>



<span class="token comment"># 递归获取提供目录下所有文件</span>
<span class="token keyword">def</span> <span class="token function">list_all_files</span><span class="token punctuation">(</span>root_path<span class="token punctuation">,</span> ignore_dirs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    default_dirs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;.git&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.obsidian&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.config&quot;</span><span class="token punctuation">]</span>
    ignore_dirs<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>default_dirs<span class="token punctuation">)</span>

    <span class="token keyword">for</span> parent<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>root_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        dirs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>d <span class="token keyword">for</span> d <span class="token keyword">in</span> dirs <span class="token keyword">if</span> <span class="token keyword">not</span> d <span class="token keyword">in</span> ignore_dirs<span class="token punctuation">]</span>
        filenames <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> filenames <span class="token keyword">if</span> <span class="token keyword">not</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;.md&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>parent<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> files


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token comment"># file_path = &#39;./xwlearn/test.md&#39;</span>
    <span class="token comment"># update_front_matter(file_path)</span>
    ignore_dirs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Resource&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Write&quot;</span><span class="token punctuation">]</span>
    files <span class="token operator">=</span> list_all_files<span class="token punctuation">(</span><span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span> ignore_dirs<span class="token operator">=</span>ignore_dirs<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;current dir: &quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;---------------------------------------------------------------&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;current file: &#39;</span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>
        update_front_matter<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="也可以通过-正则表达式实现" tabindex="-1"><a class="header-anchor" href="#也可以通过-正则表达式实现" aria-hidden="true">#</a> 也可以通过 正则表达式实现</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">import</span> datetime

<span class="token comment"># 读取文件</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;example.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 定义正则表达式</span>
pattern <span class="token operator">=</span> <span class="token string">r&quot;---\\n(.|\\n)*?(title: (?P&lt;title&gt;.+))?\\n(date: (?P&lt;date&gt;.+))?\\n---\\n&quot;</span>

<span class="token comment"># 匹配 front matter</span>
<span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> content<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span>
    <span class="token comment"># 检查是否已经存在标题和创建时间</span>
    title <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span>
    date <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> title <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token comment"># 如果标题不存在，则添加标题</span>
        title <span class="token operator">=</span> <span class="token string">&quot;New Title&quot;</span>

    <span class="token keyword">if</span> date <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token comment"># 如果创建时间不存在，则添加创建时间</span>
        date <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token comment"># 如果创建时间已经存在，则不更新</span>
        date <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">)</span>

    <span class="token comment"># 生成更新后的 front matter</span>
    new_front_matter <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;---\\ntitle: </span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">\\ndate: </span><span class="token interpolation"><span class="token punctuation">{</span>date<span class="token punctuation">}</span></span><span class="token string">\\n---\\n&quot;</span></span>

    <span class="token comment"># 将更新后的 front matter 和内容写回文件中</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;example.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> new_front_matter<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function k(d,m){return t(),p("div",null,[c,l,u,e(" more "),r])}const b=a(i,[["render",k],["__file","更新md文件的front-matter.html.vue"]]);export{b as default};
