const e=JSON.parse('{"key":"v-288b8846","path":"/code/react/React18/32-css3-%E7%9B%B8%E5%AF%B9%E9%95%BF%E5%BA%A6rem.html","title":"32-css3-相对长度rem","lang":"zh-CN","frontmatter":{"category":["react18"],"date":"2023-03-13 11:32","title":"32-css3-相对长度rem","updated":"2023-05-13 22:56","description":"32-css3-相对长度 rem rem 是 CSS 3 中新增的一种相对长度单位。当使用 rem 单位时，根节点 &lt;html&gt; 的字体大小（font-size）决定了 rem 的尺寸。 rem 单位类似于 em 单位，em 单位表示父元素字体大小，不同之处在于，rem 的基准是相对于 &lt;html&gt; 元素的字体大小。下面通过代码对比 em 和 rem 的区别。 （1）使用 em 单位，示例代码如下。 div { font-size: 12px; } div &gt; p { width: 10em; /* 结果为120px */ height: 10em; /* 结果为120px */ }","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/32-css3-%E7%9B%B8%E5%AF%B9%E9%95%BF%E5%BA%A6rem.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"32-css3-相对长度rem"}],["meta",{"property":"og:description","content":"32-css3-相对长度 rem rem 是 CSS 3 中新增的一种相对长度单位。当使用 rem 单位时，根节点 &lt;html&gt; 的字体大小（font-size）决定了 rem 的尺寸。 rem 单位类似于 em 单位，em 单位表示父元素字体大小，不同之处在于，rem 的基准是相对于 &lt;html&gt; 元素的字体大小。下面通过代码对比 em 和 rem 的区别。 （1）使用 em 单位，示例代码如下。 div { font-size: 12px; } div &gt; p { width: 10em; /* 结果为120px */ height: 10em; /* 结果为120px */ }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-24T09:20:32.000Z"}],["meta",{"property":"article:published_time","content":"2023-03-13T11:32:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-24T09:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"32-css3-相对长度rem\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-13T11:32:00.000Z\\",\\"dateModified\\":\\"2023-06-24T09:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"设置移动端的适配","slug":"设置移动端的适配","link":"#设置移动端的适配","children":[]}],"git":{"createdTime":1679501467000,"updatedTime":1687598432000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":4}]},"readingTime":{"minutes":1.16,"words":349},"filePathRelative":"code/react/React18/32-css3-相对长度rem.md","localizedDate":"2023年3月13日","excerpt":"<h1> 32-css3-相对长度 rem</h1>\\n<p>rem 是 CSS 3 中新增的一种相对长度单位。当使用 rem 单位时，根节点 <code>&lt;html&gt;</code> 的字体大小（font-size）决定了 rem 的尺寸。</p>\\n<p>rem 单位类似于 em 单位，em 单位表示父元素字体大小，不同之处在于，rem 的基准是相对于 <code>&lt;html&gt;</code> 元素的字体大小。下面通过代码对比 em 和 rem 的区别。\\n（1）使用 em 单位，示例代码如下。</p>\\n<div class=\\"language-css line-numbers-mode\\" data-ext=\\"css\\"><pre class=\\"language-css\\"><code><span class=\\"token selector\\">div</span> <span class=\\"token punctuation\\">{</span>\\n <span class=\\"token property\\">font-size</span><span class=\\"token punctuation\\">:</span> 12px<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token selector\\">div &gt; p</span> <span class=\\"token punctuation\\">{</span>\\n <span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 10em<span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">/* 结果为120px */</span>\\n <span class=\\"token property\\">height</span><span class=\\"token punctuation\\">:</span> 10em<span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">/* 结果为120px */</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{e as data};
