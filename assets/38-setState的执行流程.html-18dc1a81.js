const t=JSON.parse('{"key":"v-1d2d8426","path":"/code/react/React18/38-setState%E7%9A%84%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.html","title":"38-setState的执行流程","lang":"zh-CN","frontmatter":{"category":["react18"],"date":"2023-03-15 16:31","title":"38-setState的执行流程","updated":"2023-05-08 09:12","description":"38-setState 的执行流程 Too many re-renders. 当我们直接在函数体中调用 setState 时，就会触发上述错误 问题： 不是说过，当新的 state 值和旧值相同时，它是不会触发组件的重新渲染的 setState()的执行流程（函数组件） setCount() --&gt; dispatchSetDate() --&gt; 会先判断，组件当前处于什么阶段 如果是渲染阶段 --&gt; 不会检查 state 值是否相同 如果不是渲染阶段 --&gt; 会检查 state 的值是否相同 如果值不相同，则对组件进行重新渲染 如果值相同，则不对组件进行重新渲染 如果值相同，React 在一些情况下会继续执行当前组件的渲染 但是这个渲染不会触发其子组件的渲染，这次渲染不会产生实际的效果 这种情况通常发生在值第一次相同时","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/38-setState%E7%9A%84%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"38-setState的执行流程"}],["meta",{"property":"og:description","content":"38-setState 的执行流程 Too many re-renders. 当我们直接在函数体中调用 setState 时，就会触发上述错误 问题： 不是说过，当新的 state 值和旧值相同时，它是不会触发组件的重新渲染的 setState()的执行流程（函数组件） setCount() --&gt; dispatchSetDate() --&gt; 会先判断，组件当前处于什么阶段 如果是渲染阶段 --&gt; 不会检查 state 值是否相同 如果不是渲染阶段 --&gt; 会检查 state 的值是否相同 如果值不相同，则对组件进行重新渲染 如果值相同，则不对组件进行重新渲染 如果值相同，React 在一些情况下会继续执行当前组件的渲染 但是这个渲染不会触发其子组件的渲染，这次渲染不会产生实际的效果 这种情况通常发生在值第一次相同时"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T02:14:57.000Z"}],["meta",{"property":"article:published_time","content":"2023-03-15T16:31:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-08T02:14:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"38-setState的执行流程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-15T16:31:00.000Z\\",\\"dateModified\\":\\"2023-05-08T02:14:57.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"setState()的执行流程（函数组件）","slug":"setstate-的执行流程-函数组件","link":"#setstate-的执行流程-函数组件","children":[]},{"level":2,"title":"解决办法","slug":"解决办法","link":"#解决办法","children":[]}],"git":{"createdTime":1679501467000,"updatedTime":1683512097000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":3}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"code/react/React18/38-setState的执行流程.md","localizedDate":"2023年3月15日","excerpt":"<h1> 38-setState 的执行流程</h1>\\n<p><code>Too many re-renders.</code></p>\\n<ul>\\n<li>当我们直接在函数体中调用 setState 时，就会触发上述错误</li>\\n<li>问题：\\n不是说过，当新的 state 值和旧值相同时，它是不会触发组件的重新渲染的</li>\\n</ul>\\n<h2> setState()的执行流程（函数组件）</h2>\\n<p><code>setCount()</code> --&gt; <code>dispatchSetDate()</code>\\n--&gt; 会先判断，组件当前处于什么阶段</p>\\n<ul>\\n<li><mark>如果是渲染阶段 --&gt; 不会检查 state 值是否相同</mark></li>\\n<li>如果不是渲染阶段 --&gt; 会检查 state 的值是否相同\\n<ul>\\n<li>如果值不相同，则对组件进行重新渲染</li>\\n<li>如果值相同，则不对组件进行重新渲染\\n如果值相同，React 在一些情况下会继续执行当前组件的渲染\\n但是这个渲染不会触发其子组件的渲染，这次渲染不会产生实际的效果\\n这种情况通常发生在值第一次相同时</li>\\n</ul>\\n</li>\\n</ul>","copyright":{},"autoDesc":true}');export{t as data};
