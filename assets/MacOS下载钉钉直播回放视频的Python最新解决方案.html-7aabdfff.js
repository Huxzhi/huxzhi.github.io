import{_ as t,X as e,Y as p,Z as n,$ as s,a1 as o,a2 as c,G as i}from"./framework-c2b0d87a.js";const l={},u={href:"https://blog.51cto.com/u_15366127/6084937",target:"_blank",rel:"noopener noreferrer"},r=c(`<h1 id="macos-下载钉钉直播回放视频的-python-最新解决方案" tabindex="-1"><a class="header-anchor" href="#macos-下载钉钉直播回放视频的-python-最新解决方案" aria-hidden="true">#</a> MacOS 下载钉钉直播回放视频的 Python 最新解决方案</h1><h3 id="钉钉部分" tabindex="-1"><a class="header-anchor" href="#钉钉部分" aria-hidden="true">#</a> 钉钉部分</h3><p>在浏览器端 点击视频, 找到直播回放, 点开, 向后拖拽一下进度条, 按 F12 进入界面查看网络请求，搜索 <code>m3u8</code> 的信息，查找 response 的内容</p><p>类似下面这样:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#EXTM3U</span>
<span class="token comment">#EXT-X-VERSION:3</span>
<span class="token comment">#EXT-X-MEDIA-SEQUENCE:1</span>
<span class="token comment">#EXT-X-TARGETDURATION:35</span>
<span class="token comment">#EXTINF:33.000,</span>
xxx/1.ts?auth_key<span class="token operator">=</span>xxx
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存为 ​​aa.m3u8​​, 在 python 脚本的同级目录下.</p><h3 id="python-脚本" tabindex="-1"><a class="header-anchor" href="#python-脚本" aria-hidden="true">#</a> python 脚本</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests<span class="token punctuation">,</span> os<span class="token punctuation">,</span> re<span class="token punctuation">,</span> time


<span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content
    <span class="token keyword">return</span> r

<span class="token comment"># sz 表示深圳，bj 表示北京，注意修改</span>
base_url <span class="token operator">=</span> <span class="token string">&quot;https://dtliving-sz.dingtalk.com/live_hp/&quot;</span>


<span class="token keyword">def</span> <span class="token function">get_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;aa.m3u8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        s <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>
        <span class="token keyword">if</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r&quot;.*?ts.*?&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
            url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>base_url <span class="token operator">+</span> i<span class="token punctuation">)</span>
    <span class="token keyword">return</span> url_list


<span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    urls <span class="token operator">=</span> get_url<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> url <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">.ts&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>crawl<span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 去掉换行符</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># time.sleep(1)</span>


<span class="token comment"># 整合文件名, 方便FFmpeg合并</span>
<span class="token keyword">def</span> <span class="token function">parse_filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    base_path <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>
    urls <span class="token operator">=</span> get_url<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w+&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;file &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>base_path<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">.ts&#39;\\n&quot;</span></span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>path<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    download<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;download finished...&quot;</span><span class="token punctuation">)</span>
    parse_filename<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功 会下载一系列的 <code>二进制</code> 文件，错误的话会返回 <code>xml</code> 信息，看是不是 <code>base_url</code> 没有匹配</p><h3 id="ffmpeg-合并" tabindex="-1"><a class="header-anchor" href="#ffmpeg-合并" aria-hidden="true">#</a> FFmpeg 合并</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-safe</span> <span class="token number">0</span> <span class="token parameter variable">-i</span> file.txt <span class="token parameter variable">-c</span> copy a.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果下载的可执行文件, 还需要使用 ​​./​​​ 前缀来执行, 如果提示需要移至废纸篓, 那就去 ​​ 安全性与隐私 ​​ 那里点击仍要打开.</p>`,12);function d(k,v){const a=i("ExternalLinkIcon");return e(),p("div",null,[n("p",null,[s("原文链接： "),n("a",u,[s("https://blog.51cto.com/u_15366127/6084937"),o(a)])]),r])}const b=t(l,[["render",d],["__file","MacOS下载钉钉直播回放视频的Python最新解决方案.html.vue"]]);export{b as default};
