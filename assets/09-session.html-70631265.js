import{_ as s,X as n,Y as a,a2 as e}from"./framework-c2b0d87a.js";const t={},p=e(`<h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>session 是服务器 为每个用户的浏览器创建的一个会话对象 这个 session 会记录到 浏览器的 cookie 用来区分用户</p><p>我们使用的是 nestjs 默认框架 express 他也支持 express 的插件 所以我们就可以安装 express 的 session</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i express-session --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要智能提示可以装一个声明依赖</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i @types/express-session -D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在 main.ts 引入 通过 app.use 注册 session</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> session <span class="token keyword">from</span> <span class="token string">&#39;express-session&#39;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">//options...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数配置详解" tabindex="-1"><a class="header-anchor" href="#参数配置详解" aria-hidden="true">#</a> 参数配置详解</h2><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>secret</code></td><td>生成服务端 session 签名 可以理解为加盐</td></tr><tr><td><code>name</code></td><td>生成客户端 cookie 的名字 默认 connect.sid</td></tr><tr><td><code>cookie</code></td><td>设置返回到前端 key 的属性，默认值为{ path: ‘/’, httpOnly: true, secure: false, maxAge: null }。</td></tr><tr><td><code>rolling</code></td><td>在每次请求时强行设置 cookie，这将重置 cookie 过期时间(默认:false)</td></tr></tbody></table><h2 id="nestjs-配置" tabindex="-1"><a class="header-anchor" href="#nestjs-配置" aria-hidden="true">#</a> nestjs 配置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> VersioningType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> session <span class="token keyword">from</span> <span class="token string">&#39;express-session&#39;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">enableVersioning</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> VersioningType<span class="token punctuation">.</span><span class="token constant">URI</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&quot;XiaoMan&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xm.session&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">rolling</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">cookie</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!NOTE] 面试题 axios 默认不携带 cookie 需要开启 axios.defaults.withCredentials = true</p></blockquote>`,13),o=[p];function c(i,l){return n(),a("div",null,o)}const u=s(t,[["render",c],["__file","09-session.html.vue"]]);export{u as default};
