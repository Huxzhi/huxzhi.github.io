import{_ as p,W as o,X as c,Y as n,Z as a,a0 as e,a2 as s,y as l}from"./framework-cbb69da9.js";const i={},u=s(`<p>Vue 提供了 transition 的封装组件，在下列情形中，可以给任何元素和组件添加进入/离开过渡:</p><ul><li>条件渲染 (使用 v-if)</li><li>条件展示 (使用 v-show)</li><li>动态组件</li><li>组件根节点</li></ul><p>自定义 transition 过度效果，你需要对 transition 组件的 name 属性自定义。并在 css 中写入对应的样式</p><h2 id="过渡的类名" tabindex="-1"><a class="header-anchor" href="#过渡的类名" aria-hidden="true">#</a> 过渡的类名</h2><p>在进入/离开的过渡中，会有 6 个 class 切换。</p><ol><li>v-enter-from：定义进入过渡的开始状态。在元素被插入之前生效，在元素被插入之后的下一帧移除。</li><li>v-enter-active：定义进入过渡生效时的状态。在整个进入过渡的阶段中应用，在元素被插入之前生效，在过渡/动画完成之后移除。这个类可以被用来定义进入过渡的过程时间，延迟和曲线函数。</li><li>v-enter-to：定义进入过渡的结束状态。在元素被插入之后下一帧生效 (与此同时 v-enter-from 被移除)，在过渡/动画完成之后移除。</li><li>v-leave-from：定义离开过渡的开始状态。在离开过渡被触发时立刻生效，下一帧被移除。</li><li>v-leave-active：定义离开过渡生效时的状态。在整个离开过渡的阶段中应用，在离开过渡被触发时立刻生效，在过渡/动画完成之后移除。这个类可以被用来定义离开过渡的过程时间，延迟和曲线函数。</li><li>v-leave-to：离开过渡的结束状态。在离开过渡被触发之后下一帧生效 (与此同时 v-leave-from 被移除)，在过渡/动画完成之后移除。</li></ol><h3 id="举例" tabindex="-1"><a class="header-anchor" href="#举例" aria-hidden="true">#</a> 举例</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>flag = !flag<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>fade<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>flag<span class="token punctuation">&#39;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">//开始过度
.fade-enter-from</span><span class="token punctuation">{</span>
   <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
   <span class="token property">width</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
   <span class="token property">height</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
   <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token selector">//开始过度了
.fade-enter-active</span><span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 2.5s linear<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">//过度完成
.fade-enter-to</span><span class="token punctuation">{</span>
   <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>
   <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
   <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">//离开的过度
.fade-leave-from</span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token selector">//离开中过度
.fade-leave-active</span><span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s linear<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">//离开完成
.fade-leave-to</span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
   <span class="token property">height</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义-transition-过度效果" tabindex="-1"><a class="header-anchor" href="#自定义-transition-过度效果" aria-hidden="true">#</a> 自定义 transition 过度效果</h2><h3 id="trasnsition-props" tabindex="-1"><a class="header-anchor" href="#trasnsition-props" aria-hidden="true">#</a> trasnsition props</h3><ul><li><code>enter-from-class</code></li><li><code>enter-active-class</code></li><li><code>enter-to-class</code></li><li><code>leave-from-class</code></li><li><code>leave-active-class</code></li><li><code>leave-to-class</code></li></ul><p>将 <code>enter-from-class</code> 指定为 <code>e-form</code>，如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">:enter-from-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>e-form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="自定义过度时间-单位毫秒" tabindex="-1"><a class="header-anchor" href="#自定义过度时间-单位毫秒" aria-hidden="true">#</a> 自定义过度时间 单位毫秒</h3><p>你也可以分别指定进入和离开的持续时间</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">:duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">:duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ enter: 500, leave: 800 }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过自定义-class-结合-css-动画库-animate-css" tabindex="-1"><a class="header-anchor" href="#通过自定义-class-结合-css-动画库-animate-css" aria-hidden="true">#</a> 通过自定义 class 结合 css 动画库 animate css</h3><p>安装库 npm install animate.css</p><p>引入 import &#39;animate.css&#39;</p><p>使用方法</p>`,21),r={href:"https://animate.style/",title:"Animate.css | A cross-browser library of CSS animations.",target:"_blank",rel:"noopener noreferrer"},d=s(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span>
    <span class="token attr-name">leave-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animate__animated animate__bounceInLeft<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">enter-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animate__animated animate__bounceInRight<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transition-生命周期-8-个" tabindex="-1"><a class="header-anchor" href="#transition-生命周期-8-个" aria-hidden="true">#</a> transition 生命周期 8 个</h2><p>对应事件的钩子</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>&lt;transition
  @before-enter=&quot;beforeEnter&quot; //对应enter-from
  @enter=&quot;enter&quot;//对应enter-active
  @after-enter=&quot;afterEnter&quot;//对应enter-to
  @enter-cancelled=&quot;enterCancelled&quot;//显示过度打断
  @before-leave=&quot;beforeLeave&quot;//对应leave-from
  @leave=&quot;leave&quot;//对应enter-active
  @after-leave=&quot;afterLeave&quot;//对应leave-to
  @leave-cancelled=&quot;leaveCancelled&quot;//离开过度打断
&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当只用 JavaScript 过渡的时候，在  <strong><code>enter</code>  和  <code>leave</code>  钩子中必须使用  <code>done</code>  进行回调</strong></p>`,5),k={href:"https://greensock.com/",title:"GreenSock",target:"_blank",rel:"noopener noreferrer"},v=s(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">beforeEnter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;进入之前from&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">Enter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">,</span>done<span class="token operator">:</span><span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;过度曲线&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
       <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">AfterEnter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="appear" tabindex="-1"><a class="header-anchor" href="#appear" aria-hidden="true">#</a> appear</h2><p>通过这个属性可以设置初始节点过度 就是 <strong>页面加载完成就开始动画</strong> 对应三个状态</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>appear<span class="token operator">-</span>active<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
appear<span class="token operator">-</span>from<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
appear<span class="token operator">-</span>to<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
appear
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function m(b,g){const t=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[a("官方文档  "),n("a",r,[a("Animate.css | A cross-browser library of CSS animations."),e(t)])]),d,n("p",null,[a("结合 gsap 动画库使用  "),n("a",k,[a("GreenSock"),e(t)])]),v])}const f=p(i,[["render",m],["__file","21-transition动画组件.html.vue"]]);export{f as default};
