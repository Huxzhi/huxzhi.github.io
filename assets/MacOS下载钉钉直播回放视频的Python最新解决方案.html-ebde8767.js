import{_ as o,X as p,Y as i,Z as n,$ as s,a1 as e,a2 as t,G as c}from"./framework-c2b0d87a.js";const l="/assets/dingtalkdownload-01-5a47f906.png",r="/assets/dingtalkdownload-02-aa9512b4.png",u={},d=n("h1",{id:"macos-下载钉钉直播回放视频录播的-python-最新解决方案",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#macos-下载钉钉直播回放视频录播的-python-最新解决方案","aria-hidden":"true"},"#"),s(" MacOS 下载钉钉直播回放视频录播的 Python 最新解决方案")],-1),k=n("h2",{id:"下载-ffmpeg",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载-ffmpeg","aria-hidden":"true"},"#"),s(" 下载 ffmpeg")],-1),m={href:"https://ffmpeg.org/download.html",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>并添加到 环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-v</span>

ffmpeg version <span class="token number">6.0</span> Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>-2023 the FFmpeg developers built with Apple clang version <span class="token number">14.0</span>.3 <span class="token punctuation">(</span>clang-1403.0.22.14.1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示版本号即为成功</p><h2 id="自动化脚本使用" tabindex="-1"><a class="header-anchor" href="#自动化脚本使用" aria-hidden="true">#</a> 自动化脚本使用</h2>`,4),h={href:"https://github.com/Huxzhi/DingTalk-playback-download",target:"_blank",rel:"noopener noreferrer"},b=t('<p>在浏览器端 点击视频, 找到直播回放, 点开, 向后拖拽一下进度条, 按 F12 进入界面查看网络请求，过滤 <code>m3u8</code> 的信息，查找 Preview 的内容</p><p>第一步，看一下 <code>header</code> 是来自哪里的机房</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二步， Ctrl + A 全选 Preview 的内容</p><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>类似下面这样:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#EXTM3U</span>
<span class="token comment">#EXT-X-VERSION:3</span>
<span class="token comment">#EXT-X-MEDIA-SEQUENCE:1</span>
<span class="token comment">#EXT-X-TARGETDURATION:35</span>
<span class="token comment">#EXTINF:33.000,</span>
xxx/1.ts?auth_key<span class="token operator">=</span>xxx
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存为 ​​<code>aa.bj.m3u8</code> ​​, 在 python 脚本的同级目录下，<strong>注意，中间的 bj，有可能是不一样的</strong> ， sz 表示深圳，bj 表示北京</p><p>然后执行脚本 <code>python3 a.py</code> 即可</p><h3 id="如果是-windows" tabindex="-1"><a class="header-anchor" href="#如果是-windows" aria-hidden="true">#</a> 如果是 windows</h3><p>不能使用参数 <code>-crf</code> ，压缩视频，需要更换编码器指令</p><h3 id="python-脚本" tabindex="-1"><a class="header-anchor" href="#python-脚本" aria-hidden="true">#</a> python 脚本 <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></h3><blockquote><p>演示版本，和自动化脚本有所不同</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests<span class="token punctuation">,</span> os<span class="token punctuation">,</span> re<span class="token punctuation">,</span> time


<span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content
    <span class="token keyword">return</span> r

<span class="token comment"># sz 表示深圳，bj 表示北京，</span>
base_url <span class="token operator">=</span> <span class="token string">&quot;https://dtliving-sz.dingtalk.com/live_hp/&quot;</span>


<span class="token keyword">def</span> <span class="token function">get_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;aa.m3u8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        s <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>
        <span class="token keyword">if</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r&quot;.*?ts.*?&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
            url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>base_url <span class="token operator">+</span> i<span class="token punctuation">)</span>
    <span class="token keyword">return</span> url_list


<span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    urls <span class="token operator">=</span> get_url<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> url <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">.ts&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>crawl<span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 去掉换行符</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># time.sleep(1)</span>


<span class="token comment"># 整合文件名, 方便FFmpeg合并</span>
<span class="token keyword">def</span> <span class="token function">parse_filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    base_path <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>
    urls <span class="token operator">=</span> get_url<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w+&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;file &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>base_path<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">.ts&#39;\\n&quot;</span></span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>path<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    download<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;download finished...&quot;</span><span class="token punctuation">)</span>
    parse_filename<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果成功 会下载 一系列的 <code>二进制</code> 文件，<code>1.ts, 2.ts, 3.ts, ...</code></p><p>错误的话，则是 <code>xml</code> 格式内容的 文件,打开会显示错误信息 。</p><p>解决办法，看是不是 <code>base_url</code> 没有匹配，sz 和 bj 搞错了</p><h3 id="ffmpeg-合并" tabindex="-1"><a class="header-anchor" href="#ffmpeg-合并" aria-hidden="true">#</a> FFmpeg 合并</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-safe</span> <span class="token number">0</span> <span class="token parameter variable">-i</span> file.txt <span class="token parameter variable">-c</span> copy a.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>相信合并完之后觉的文件太大，可以在用 <code>ffmpeg</code> 进行再压缩，或者用 <code>h256/hevc</code> 重新编码，可以获得更小的体积文件</p><h3 id="视频体积压缩" tabindex="-1"><a class="header-anchor" href="#视频体积压缩" aria-hidden="true">#</a> 视频体积压缩</h3><h4 id="最简单的方式-用软件压缩" tabindex="-1"><a class="header-anchor" href="#最简单的方式-用软件压缩" aria-hidden="true">#</a> 最简单的方式，用软件压缩</h4><p>推荐用 permute 软件压缩</p><h4 id="第二种-ffmpeg-将视频转换为-h-265-编码" tabindex="-1"><a class="header-anchor" href="#第二种-ffmpeg-将视频转换为-h-265-编码" aria-hidden="true">#</a> 第二种 FFmpeg 将视频转换为 H.265 编码<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></h4><p>使用更高效的视频编码格式是一种常用的方法，可以通过使用压缩率更高的视频编码格式来减小视频文件的体积。下面是一个使用 FFmpeg 将视频转换为 H.265 编码格式的示例：</p><p><code>ffmpeg -i input.mp4 -c:v libx265 -crf 28 output.mp4</code></p><p>上述命令将输入视频 input.mp4 转换为 H.265 编码格式，并将结果保存为 output.mp4 文件。其中，-c:v 选项表示视频编码器，libx265 表示使用 x265 编码器，-crf 选项表示视频质量，28 表示目标视频质量，值越小视频质量越高，文件体积越大。</p><p>测试，1.3g 的视频 压缩 为 231m 大小，但是速度太慢了 speed=0.8 ，3 小时的视频压缩花了我 4 个小时 ，寻找其他方法</p><h4 id="mac-m1-芯片-启动硬件加速" tabindex="-1"><a class="header-anchor" href="#mac-m1-芯片-启动硬件加速" aria-hidden="true">#</a> mac m1 芯片 启动硬件加速</h4><p>hevc_videotoolbox 不如 libx265，但速度很快，在我 m1 MacBook air 13 上，</p><p>像大多数硬件加速编码器一样，hevc_videtoolbox 的效率不如 libx265。因此，与 libx265 相比，您可能需要给它一个明显更高的比特率才能匹配同等的质量。这可能会破坏从 H.264 重新编码到 HEVC/H.265 的目的。</p>`,31),f={href:"https://trac.ffmpeg.org/wiki/HWAccelIntro#VideoToolbox",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># VideoToolbox [¶](https://trac.ffmpeg.org/wiki/HWAccelIntro#VideoToolbox &quot;链接到这一节&quot;)

[​VideoToolbox](https://developer.apple.com/documentation/videotoolbox) is the macOS framework for video decoding and encoding.

The following codecs are supported:

- Decoding: H.263, H.264, HEVC, MPEG-1, MPEG-2, MPEG-4 Part 2, ProRes
- Encoding: H.264, HEVC, ProRes

To use H.264/HEVC hardware encoding in macOS, just use the encoder \`-c:v h264_videotoolbox\` or \`-c:v hevc_videotoolbox\` for H.264 or HEVC respectively.

Check \`ffmpeg -h encoder=...\` to see encoder options.

VideoToolbox supports two types of rate control:

- Bitrate-based using \`-b:v\`
- Constant quality with \`-q:v\`. Note that the scale is 1-100, with 1 being the lowest and 100 the highest. Constant quality mode is only available for Apple Silicon and from ffmpeg 4.4 and higher.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开启 GPU 加速<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>，并指定视频编码器进行编码。要注意的是 VideoToolbox 不支持 CRF，因此必须通过  <code>-b:v</code>  指定码率。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Codec AVOption crf <span class="token punctuation">(</span>Select the quality <span class="token keyword">for</span> constant quality mode<span class="token punctuation">)</span> has not been used <span class="token keyword">for</span> any stream. The <span class="token function">most</span> likely reason is either wrong <span class="token builtin class-name">type</span> <span class="token punctuation">(</span>e.g. a video option with no video streams<span class="token punctuation">)</span> or that it is a private option of some encoder <span class="token function">which</span> was not actually used <span class="token keyword">for</span> any stream.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>测试默认选项 大概快了 10 倍</p><p><code>ffmpeg video -i input.mp4 -c:v hevc_videotoolbox output.mp4</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">frame</span><span class="token operator">=</span><span class="token number">126360</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">114</span> <span class="token assign-left variable">q</span><span class="token operator">=</span>-0.0 <span class="token assign-left variable">Lsize</span><span class="token operator">=</span>  413400kB <span class="token assign-left variable">time</span><span class="token operator">=</span>02:55:29.95 <span class="token assign-left variable">bitrate</span><span class="token operator">=</span> <span class="token number">321</span>.6kbits/s <span class="token assign-left variable">dup</span><span class="token operator">=</span><span class="token number">663</span> <span class="token assign-left variable">drop</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">speed</span><span class="token operator">=</span><span class="token number">9</span>.51x
video:315854kB audio:93814kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: <span class="token number">0.910847</span>%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>和之前的相比 大概快了 10 倍 ，文件大小从 800m 到 400m ，但是压缩率下降了，我再多测试几个文件</p><p>macOS 中 对应 h264 的编码有 libx264 和 h264_videotoolbox ，两个速度差不多，但是 libx264 cpu 占用率高，转码后的文件体积也小，听说播放视频的解码要求也会高一点</p><h3 id="批处理视频" tabindex="-1"><a class="header-anchor" href="#批处理视频" aria-hidden="true">#</a> 批处理视频</h3><p>经过我测试发现，录播文件可是使用 h264 编码，h265 编码在 4k，运动镜头多的情况下优势明显，钉钉直播回放 只有 12 帧 和 1080p 画质，不需要上 h265，而且我学习的录播还是 ppt 居多，很少运动镜头。</p><p>推荐以下指令：</p><p><code>find ./ -name &#39;*.mp4&#39; -exec sh -c &#39;ffmpeg -i &quot;$0&quot; -c:v libx264 -crf 30 -c:a aac &quot;\${0%%.mp4}-hevc.mp4&quot;&#39; {} \\;</code></p><h3 id="引用链接" tabindex="-1"><a class="header-anchor" href="#引用链接" aria-hidden="true">#</a> 引用链接</h3><hr class="footnotes-sep">`,14),_={class:"footnotes"},w={class:"footnotes-list"},x={id:"footnote1",class:"footnote-item"},y={href:"https://blog.51cto.com/u_15366127/6084937",target:"_blank",rel:"noopener noreferrer"},q=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),E={id:"footnote2",class:"footnote-item"},T={href:"https://juejin.cn/post/7222575963564654648",target:"_blank",rel:"noopener noreferrer"},H=n("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1),V={id:"footnote3",class:"footnote-item"},C={href:"https://blog.xm.mk/posts/1a3h/",target:"_blank",rel:"noopener noreferrer"},F=n("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1);function P(B,S){const a=c("ExternalLinkIcon");return p(),i("div",null,[d,k,n("p",null,[s("官网 "),n("a",m,[s("https://ffmpeg.org/download.html"),e(a)])]),v,n("p",null,[s("完整代码 : "),n("a",h,[s("https://github.com/Huxzhi/DingTalk-playback-download"),e(a)])]),b,n("p",null,[s("官网 "),n("a",f,[s("https://trac.ffmpeg.org/wiki/HWAccelIntro#VideoToolbox"),e(a)])]),g,n("section",_,[n("ol",w,[n("li",x,[n("p",null,[s("代码部分来源 "),n("a",y,[s("https://blog.51cto.com/u_15366127/6084937"),e(a)]),s(),q])]),n("li",E,[n("p",null,[s("使用 ffmpeg 缩小视频体积的几种方式 "),n("a",T,[s("https://juejin.cn/post/7222575963564654648"),e(a)]),s(),H])]),n("li",V,[n("p",null,[s("FMPEG 硬件加速 "),n("a",C,[s("https://blog.xm.mk/posts/1a3h/"),e(a)]),s(),F])])])])])}const A=o(u,[["render",P],["__file","MacOS下载钉钉直播回放视频的Python最新解决方案.html.vue"]]);export{A as default};
