const e=JSON.parse('{"key":"v-594afdf6","path":"/code/nest-js/18-pipe%E7%AE%A1%E9%81%93%E8%BD%AC%E6%8D%A2.html","title":"18-pipe管道转换","lang":"zh-CN","frontmatter":{"date":"2023-02-01 17:32","title":"18-pipe管道转换","updated":"2023-05-13 22:56","description":"image-2023-02-01_17-51-54-980-18-pipe管道转换 管道 可以做两件事 转换，可以将前端传入的数据转成成我们需要的数据 验证 类似于前端的 rules 配置验证规则 我们先来讲一下转换 Nestjs 提供了八个内置转换 API ValidationPipe ParseIntPipe ParseFloatPipe ParseBoolPipe ParseArrayPipe ParseUUIDPipe ParseEnumPipe DefaultValuePipe","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/nest-js/18-pipe%E7%AE%A1%E9%81%93%E8%BD%AC%E6%8D%A2.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"18-pipe管道转换"}],["meta",{"property":"og:description","content":"image-2023-02-01_17-51-54-980-18-pipe管道转换 管道 可以做两件事 转换，可以将前端传入的数据转成成我们需要的数据 验证 类似于前端的 rules 配置验证规则 我们先来讲一下转换 Nestjs 提供了八个内置转换 API ValidationPipe ParseIntPipe ParseFloatPipe ParseBoolPipe ParseArrayPipe ParseUUIDPipe ParseEnumPipe DefaultValuePipe"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://huxzhi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-24T09:20:32.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"18-pipe管道转换"}],["meta",{"property":"article:published_time","content":"2023-02-01T17:32:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-24T09:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18-pipe管道转换\\",\\"image\\":[\\"https://huxzhi.github.io/\\"],\\"datePublished\\":\\"2023-02-01T17:32:00.000Z\\",\\"dateModified\\":\\"2023-06-24T09:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"案例 1 我们接受的动态参数希望是一个 number 类型 现在是 string","slug":"案例-1-我们接受的动态参数希望是一个-number-类型-现在是-string","link":"#案例-1-我们接受的动态参数希望是一个-number-类型-现在是-string","children":[]},{"level":2,"title":"案例 2 验证 UUID","slug":"案例-2-验证-uuid","link":"#案例-2-验证-uuid","children":[]}],"git":{"createdTime":1677862957000,"updatedTime":1687598432000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":4}]},"readingTime":{"minutes":0.79,"words":236},"filePathRelative":"code/nest-js/18-pipe管道转换.md","localizedDate":"2023年2月1日","excerpt":"<figure><figcaption>image-2023-02-01_17-51-54-980-18-pipe管道转换</figcaption></figure>\\n<h1> 管道</h1>\\n<p>可以做两件事</p>\\n<ol>\\n<li>转换，可以将前端传入的数据转成成我们需要的数据</li>\\n<li>验证 类似于前端的 rules 配置验证规则</li>\\n</ol>\\n<p>我们先来讲一下转换 Nestjs 提供了八个内置转换 API</p>\\n<ul>\\n<li>ValidationPipe</li>\\n<li>ParseIntPipe</li>\\n<li>ParseFloatPipe</li>\\n<li>ParseBoolPipe</li>\\n<li>ParseArrayPipe</li>\\n<li>ParseUUIDPipe</li>\\n<li>ParseEnumPipe</li>\\n<li>DefaultValuePipe</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
