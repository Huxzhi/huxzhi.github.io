import{_ as n,X as s,Y as a,a2 as t}from"./framework-c2b0d87a.js";const e="/assets/image-2023-02-01_17-31-03-072-17-异常拦截器-ba3f0032.png",p={},o=t(`<p>上一章我们讲了全局响应拦截，这一章我们来讲一下全局异常拦截器</p><h2 id="全局异常拦截器" tabindex="-1"><a class="header-anchor" href="#全局异常拦截器" aria-hidden="true">#</a> 全局异常拦截器</h2><p>src/common 下面新建 <code>filter.ts</code></p><p>让我们创建一个异常过滤器，它负责捕获作为 <code>HttpException</code> 类实例的异常，并为它们设置自定义响应逻辑。为此，我们需要访问底层平台 <code>Request</code> 和 <code>Response</code>。我们将访问 <code>Request</code> 对象，以便提取原始 <code>url</code> 并将其包含在日志信息中。我们将使用 <code>Response.json()</code> 方法，使用 <code>Response</code> 对象直接控制发送的响应。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ExceptionFilter<span class="token punctuation">,</span> Catch<span class="token punctuation">,</span> ArgumentsHost<span class="token punctuation">,</span>HttpException <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>Request<span class="token punctuation">,</span>Response<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Catch</span></span><span class="token punctuation">(</span>HttpException<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">HttpFilter</span> <span class="token keyword">implements</span> <span class="token class-name">ExceptionFilter</span> <span class="token punctuation">{</span>
    <span class="token function">catch</span><span class="token punctuation">(</span>exception<span class="token operator">:</span>HttpException<span class="token punctuation">,</span> host<span class="token operator">:</span> ArgumentsHost<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ctx <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">switchToHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> request <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">getRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span>Request<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">getResponse</span><span class="token generic class-name"><span class="token operator">&lt;</span>Response<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">const</span> status <span class="token operator">=</span> exception<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
           data<span class="token operator">:</span>exception<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
           time<span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           success<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
           path<span class="token operator">:</span>request<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
           status
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册全局异常过滤器" tabindex="-1"><a class="header-anchor" href="#注册全局异常过滤器" aria-hidden="true">#</a> 注册全局异常过滤器</h3><div class="language-vbscript line-numbers-mode" data-ext="vbscript"><pre class="language-vbscript"><code>app.useGlobalFilters(new HttpFilter())
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',8),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(p,[["render",i],["__file","17-异常拦截器ExceptionFilter.html.vue"]]);export{d as default};
