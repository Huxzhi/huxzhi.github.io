import{_ as n,X as s,Y as a,a2 as t}from"./framework-c2b0d87a.js";const e="/assets/image-2023-01-13_16-29-02-647-06-API-78424c9d.png",p="/assets/image-2023-01-13_16-29-35-577-06-API-2a2c9878.png",c={},o=t(`<h1 id="_1-reset" tabindex="-1"><a class="header-anchor" href="#_1-reset" aria-hidden="true">#</a> 1.$reset</h1><p>重置 <code>store</code> 到他的初始状态</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
     user<span class="token operator">:</span> <span class="token operator">&lt;</span>Result<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
     name<span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
     current<span class="token operator">:</span><span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vue 例如我把值改变到了 10</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     Test<span class="token punctuation">.</span>current<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用<code>$reset()</code>;</p><p>将会把 <code>state</code> 所有值 重置回 原始状态</p><h1 id="_2-订阅-state-的改变" tabindex="-1"><a class="header-anchor" href="#_2-订阅-state-的改变" aria-hidden="true">#</a> 2.订阅 state 的改变</h1><p>类似于 Vuex 的 abscribe  只要有 <code>state</code> 的变化就会走这个函数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Test<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回值 <img src="`+e+`" alt="" loading="lazy"></p><p>第二个参数</p><p>如果你的组件卸载之后还想继续调用请设置第二个参数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Test<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>  detached<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_3-订阅-actions-的调用" tabindex="-1"><a class="header-anchor" href="#_3-订阅-actions-的调用" aria-hidden="true">#</a> 3.订阅 Actions 的调用</h1><p>只要有 actions 被调用就会走这个函数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Test<span class="token punctuation">.</span><span class="token function">$onAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',18),i=[o];function u(l,r){return s(),a("div",null,i)}const k=n(c,[["render",u],["__file","06-API.html.vue"]]);export{k as default};
