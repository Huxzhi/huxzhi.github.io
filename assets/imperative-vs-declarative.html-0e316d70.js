const e=JSON.parse('{"key":"v-3fe6eb47","path":"/code/imperative-vs-declarative.html","title":"声明式编程和命令式编程的比较","lang":"zh-CN","frontmatter":{"title":"声明式编程和命令式编程的比较","icon":"page","date":"2023-01-16T00:00:00.000Z","category":["think"],"tag":["编程"],"description":"声明式编程和命令式编程的比较 命令式编程（Imperative） vs声明式编程（ Declarative） imperative-vs-declarative 命令式编程 命令式编程：命令“机器”如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。 声明式编程：告诉“机器”你想要的是什么(what)，让机器想出如何去做(how)。 这么一想还真是，之前学习的都是命令式，需要考虑不同的初始条件和结束，兼容性很差，声明式 map，reduce，filter 把一些操作都抽象出来了，不再需要for循环了，没有初始条件，","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/imperative-vs-declarative.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"声明式编程和命令式编程的比较"}],["meta",{"property":"og:description","content":"声明式编程和命令式编程的比较 命令式编程（Imperative） vs声明式编程（ Declarative） imperative-vs-declarative 命令式编程 命令式编程：命令“机器”如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。 声明式编程：告诉“机器”你想要的是什么(what)，让机器想出如何去做(how)。 这么一想还真是，之前学习的都是命令式，需要考虑不同的初始条件和结束，兼容性很差，声明式 map，reduce，filter 把一些操作都抽象出来了，不再需要for循环了，没有初始条件，"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-03T17:02:37.000Z"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:published_time","content":"2023-01-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-03T17:02:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"声明式编程和命令式编程的比较\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-03T17:02:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"命令式编程","slug":"命令式编程","link":"#命令式编程","children":[]}],"git":{"createdTime":1677862957000,"updatedTime":1677862957000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.97,"words":590},"filePathRelative":"code/imperative-vs-declarative.md","localizedDate":"2023年1月16日","excerpt":"<h1> 声明式编程和命令式编程的比较</h1>\\n<p>命令式编程（Imperative） vs声明式编程（ Declarative）</p>\\n<p>imperative-vs-declarative</p>\\n<h2> 命令式编程</h2>\\n<ul>\\n<li><strong>命令式编程</strong>：命令“机器”如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。</li>\\n<li><strong>声明式编程</strong>：告诉“机器”你想要的是什么(what)，让机器想出如何去做(how)。</li>\\n</ul>\\n<p>这么一想还真是，之前学习的都是命令式，需要考虑不同的初始条件和结束，兼容性很差，声明式 map，reduce，filter 把一些操作都抽象出来了，不再需要for循环了，没有初始条件，</p>","copyright":{},"autoDesc":true}');export{e as data};
