import{_ as n,X as s,Y as a,a2 as e}from"./framework-c2b0d87a.js";const t={},p=e(`<p>在一开始，只有全局变量和函数变量，没有块级作用域</p><ul><li>var <ul><li>没有块级作用域</li></ul></li><li>let <ul><li>有块级作用域</li></ul></li><li>const <ul><li>和 let 类似，具有块级作用域，但是它只能赋值一次</li><li>使用场景： 1. 对于一些常量可以使用 const 声明 2. 对于一些对象（函数）也可以使用 const 声明 这样可以避免对象（函数）被意外修改</li></ul></li></ul><h2 id="var-和-let-区别" tabindex="-1"><a class="header-anchor" href="#var-和-let-区别" aria-hidden="true">#</a> var 和 let 区别</h2><ul><li><code>var</code> 是 全局变量，没有块级作用域</li><li><code>let</code> 是 块级作用域</li></ul><h3 id="现象一" tabindex="-1"><a class="header-anchor" href="#现象一" aria-hidden="true">#</a> 现象一</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;内部循环--&gt;&#39;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// i = 5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;外部循环--&gt;&#39;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for 循环不能隔离变量</p><h3 id="现象二" tabindex="-1"><a class="header-anchor" href="#现象二" aria-hidden="true">#</a> 现象二</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// b = undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码没有执行，所以是 未定义 如果是注释掉 if 代码段，会抛出异常 <code>b is not defined</code></p><p>解释：变量提升</p><p>解决办法：闭包，立即函数</p><blockquote><p>闭包是内部访问外部，外部不能访问内部</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// b is not defined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 函数隔离域</p>`,15),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","01-变量的声明.html.vue"]]);export{d as default};
