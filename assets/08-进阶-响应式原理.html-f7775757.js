const e=JSON.parse('{"key":"v-238a6d25","path":"/zh/posts/literature-notes/xiaoman-zsVue3-vite-Ts/08-%E8%BF%9B%E9%98%B6-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html","title":"08-进阶-响应式原理","lang":"zh-CN","frontmatter":{"date":"2023-01-02 16:24","title":"08-进阶-响应式原理","description":"未完成 响应式原理 Vue2 使用的是 Object.defineProperty Vue3 使用的是 Proxy，对对象做了一个劫持 2.0 的不足 对象只能劫持 设置好的数据，新增的数据需要 Vue.Set(xxx) 数组只能操作七种方法，修改某一项值无法劫持。 reactive 和 effect 的实现 export const reactive = &lt;T extends object&gt;(target:T) =&gt; { return new Proxy(target,{ get (target,key,receiver) { const res = Reflect.get(target,key,receiver) as object return res }, set (target,key,value,receiver) { const res = Reflect.set(target,key,value,receiver) return res } }) }","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://huxzhi.github.io/posts/literature-notes/xiaoman-zsVue3-vite-Ts/08-%E8%BF%9B%E9%98%B6-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:url","content":"https://huxzhi.github.io/zh/posts/literature-notes/xiaoman-zsVue3-vite-Ts/08-%E8%BF%9B%E9%98%B6-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"08-进阶-响应式原理"}],["meta",{"property":"og:description","content":"未完成 响应式原理 Vue2 使用的是 Object.defineProperty Vue3 使用的是 Proxy，对对象做了一个劫持 2.0 的不足 对象只能劫持 设置好的数据，新增的数据需要 Vue.Set(xxx) 数组只能操作七种方法，修改某一项值无法劫持。 reactive 和 effect 的实现 export const reactive = &lt;T extends object&gt;(target:T) =&gt; { return new Proxy(target,{ get (target,key,receiver) { const res = Reflect.get(target,key,receiver) as object return res }, set (target,key,value,receiver) { const res = Reflect.set(target,key,value,receiver) return res } }) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-03-02T04:23:32.000Z"}],["meta",{"property":"article:published_time","content":"2023-01-02T16:24:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T04:23:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08-进阶-响应式原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-02T16:24:00.000Z\\",\\"dateModified\\":\\"2023-03-02T04:23:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"2.0 的不足","slug":"_2-0-的不足","link":"#_2-0-的不足","children":[]},{"level":2,"title":"reactive 和 effect 的实现","slug":"reactive-和-effect-的实现","link":"#reactive-和-effect-的实现","children":[]}],"git":{"createdTime":1677731012000,"updatedTime":1677731012000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":1}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"zh/posts/literature-notes/xiaoman-zsVue3-vite-Ts/08-进阶-响应式原理.md","localizedDate":"2023年1月2日","excerpt":"<h1> 未完成</h1>\\n<h1> 响应式原理</h1>\\n<p>Vue2 使用的是 Object.defineProperty Vue3 使用的是 Proxy，对对象做了一个劫持</p>\\n<h2> 2.0 的不足</h2>\\n<p>对象只能劫持 设置好的数据，新增的数据需要 Vue.Set(xxx) 数组只能操作七种方法，修改某一项值无法劫持。</p>\\n<h2> reactive 和 effect 的实现</h2>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> reactive <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">object</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token operator\\">:</span><span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Proxy</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">get</span> <span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span>key<span class=\\"token punctuation\\">,</span>receiver<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">const</span> res  <span class=\\"token operator\\">=</span> Reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span>key<span class=\\"token punctuation\\">,</span>receiver<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> object\\n\\n\\n          <span class=\\"token keyword\\">return</span> res\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token function\\">set</span> <span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span>key<span class=\\"token punctuation\\">,</span>value<span class=\\"token punctuation\\">,</span>receiver<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n           <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> Reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span>key<span class=\\"token punctuation\\">,</span>value<span class=\\"token punctuation\\">,</span>receiver<span class=\\"token punctuation\\">)</span>\\n\\n\\n           <span class=\\"token keyword\\">return</span> res\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{e as data};
