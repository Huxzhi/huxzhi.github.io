const e=JSON.parse('{"key":"v-f443e300","path":"/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/03-Class%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB.html","title":"03-Class类和抽象类","lang":"zh-CN","frontmatter":{"date":"2022-12-30 16:51","title":"03-Class类和抽象类","updated":"2023-05-13 22:56","description":"ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过 class 关键字，可以定义类。基本上，ES6 的 class 可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的 class 写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用 ES6 的“类”改写，就是下面这样。 更像 Java 的语法 //定义类 class Person { constructor () { //构造函数 } run () { } }","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/03-Class%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"03-Class类和抽象类"}],["meta",{"property":"og:description","content":"ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过 class 关键字，可以定义类。基本上，ES6 的 class 可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的 class 写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用 ES6 的“类”改写，就是下面这样。 更像 Java 的语法 //定义类 class Person { constructor () { //构造函数 } run () { } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://huxzhi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-24T09:20:32.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"03-Class类和抽象类"}],["meta",{"property":"article:published_time","content":"2022-12-30T16:51:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-24T09:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03-Class类和抽象类\\",\\"image\\":[\\"https://huxzhi.github.io/\\"],\\"datePublished\\":\\"2022-12-30T16:51:00.000Z\\",\\"dateModified\\":\\"2023-06-24T09:20:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. TS 定义类","slug":"_1-ts-定义类","link":"#_1-ts-定义类","children":[]},{"level":2,"title":"2. 类的修饰符","slug":"_2-类的修饰符","link":"#_2-类的修饰符","children":[{"level":3,"title":"总共有三个 public private protected","slug":"总共有三个-public-private-protected","link":"#总共有三个-public-private-protected","children":[]},{"level":3,"title":"static 静态属性","slug":"static-静态属性","link":"#static-静态属性","children":[]}]},{"level":2,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]}],"git":{"createdTime":1677924451000,"updatedTime":1687598432000,"contributors":[{"name":"Huxzhi","email":"huxzhi@gmail.com","commits":4}]},"readingTime":{"minutes":0.94,"words":281},"filePathRelative":"code/language/typescript/小满TypeScript基础教学/03-Class类和抽象类.md","localizedDate":"2022年12月30日","excerpt":"<p>ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过 class 关键字，可以定义类。基本上，ES6 的 class 可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的 class 写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用 ES6 的“类”改写，就是下面这样。</p>\\n<blockquote>\\n<p>更像 Java 的语法</p>\\n</blockquote>\\n<div class=\\"language-TypeScript line-numbers-mode\\" data-ext=\\"TypeScript\\"><pre class=\\"language-TypeScript\\"><code>//定义类\\nclass Person {\\n    constructor () { //构造函数\\n \\n    }\\n    run () {\\n        \\n    }\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{e as data};
