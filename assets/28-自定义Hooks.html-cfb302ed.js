import{_ as t,X as p,Y as o,Z as n,$ as s,a1 as c,a2 as a,G as i}from"./framework-c2b0d87a.js";const l="/assets/image-2023-01-07_16-01-12-714-28-自定义Hooks-6ad9b0c5.png",u={},r=a('<h1 id="vue3-自定义-hook" tabindex="-1"><a class="header-anchor" href="#vue3-自定义-hook" aria-hidden="true">#</a> Vue3 自定义 Hook</h1><p>主要用来处理复用代码逻辑的一些封装</p><p>这个在 vue2 就已经有一个东西是 <code>Mixins</code></p><p>mixins 就是将这些多个相同的逻辑抽离出来，各个组件只需要引入 <code>mixins</code>，就能实现一次写代码，多组件受益的效果。</p><p>弊端就是 会涉及到覆盖的问题</p><p>组件的 <code>data</code>、<code>methods</code>、<code>filters</code> 会覆盖 <code>mixins</code> 里的同名 <code>data</code>、<code>methods</code>、<code>filters</code>。</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二点就是 变量来源不明确（隐式传入），不利于阅读，使代码变得难以维护。</p><p>Vue3 的自定义的 hook</p><ul><li>Vue3 的 hook 函数 相当于 vue2 的 mixin, 不同在与 hooks 是函数</li><li>Vue3 的 hook 函数 可以帮助我们提高代码的复用性, 让我们能在不同的组件中都利用 hooks 函数</li></ul>',10),k={href:"https://vueuse.org/guide/",title:"Get Started | VueUse",target:"_blank",rel:"noopener noreferrer"},d=a(`<h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>


<span class="token keyword">type</span> <span class="token class-name">Options</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    el<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Return</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    Baseurl<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Return<span class="token operator">&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">//异步执行</span>
        <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> file<span class="token operator">:</span> HTMLImageElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLImageElement<span class="token punctuation">;</span>
            file<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    Baseurl<span class="token operator">:</span> <span class="token function">toBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span>


        <span class="token keyword">const</span> toBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLImageElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> canvas<span class="token operator">:</span> HTMLCanvasElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> CanvasRenderingContext2D
            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> el<span class="token punctuation">.</span>width
            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> el<span class="token punctuation">.</span>height
            ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/png&#39;</span><span class="token punctuation">)</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(m,b){const e=i("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[s("Vue3 hook 库 "),n("a",k,[s("Get Started | VueUse"),c(e)])]),d])}const g=t(u,[["render",v],["__file","28-自定义Hooks.html.vue"]]);export{g as default};
